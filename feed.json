{
    "version": "https://jsonfeed.org/version/1",
    "title": "若批评不自由，则赞美无意义",
    "subtitle": "有梦书架",
    "icon": "https://limxtop1989.github.io/limxtop/images/favicon.ico",
    "description": "",
    "home_page_url": "https://limxtop1989.github.io/limxtop",
    "items": [
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/08/06/AndroidX-migrate/",
            "url": "https://limxtop1989.github.io/limxtop/2023/08/06/AndroidX-migrate/",
            "title": "穿山甲集成报错",
            "date_published": "2023-08-06T15:10:48.000Z",
            "content_html": "<h1 id=\"异常描述\"><a class=\"anchor\" href=\"#异常描述\">#</a> 异常描述</h1>\n<p>引入穿山甲 SDK 后，编译运行时异常，堆栈如下</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">2023</span><span class=\"token operator\">-</span><span class=\"token number\">08</span><span class=\"token operator\">-</span><span class=\"token number\">06</span> <span class=\"token number\">23</span><span class=\"token operator\">:</span><span class=\"token number\">08</span><span class=\"token operator\">:</span><span class=\"token number\">51.659</span> <span class=\"token number\">32243</span><span class=\"token operator\">-</span><span class=\"token number\">32243</span><span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>wordcard<span class=\"token punctuation\">.</span>debug <span class=\"token class-name\">E</span><span class=\"token operator\">/</span><span class=\"token class-name\">AndroidRuntime</span><span class=\"token operator\">:</span> FATAL EXCEPTION<span class=\"token operator\">:</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">Process</span><span class=\"token operator\">:</span> com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>wordcard<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">,</span> PID<span class=\"token operator\">:</span> <span class=\"token number\">32243</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>RuntimeException</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Unable</span> <span class=\"token keyword\">to</span> <span class=\"token namespace\">get</span> provider <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>bytedance<span class=\"token punctuation\">.</span>sdk<span class=\"token punctuation\">.</span>openadsdk<span class=\"token punctuation\">.</span></span>TTFileProvider</span><span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassNotFoundException</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Didn</span>'t find <span class=\"token keyword\">class</span> <span class=\"token string\">\"com.bytedance.sdk.openadsdk.TTFileProvider\"</span> on path<span class=\"token operator\">:</span> <span class=\"token class-name\">DexPathList</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>zip file <span class=\"token string\">\"/data/app/~~8aOWO0BH2NR-PT5SN6_9Sw==/com.maxim.wordcard.debug-z4MN-3uI1JjNQYgIxbhNYQ==/base.apk\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>nativeLibraryDirectories<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token number\">8</span>aOWO0BH2NR<span class=\"token operator\">-</span><span class=\"token class-name\">PT5SN6_9Sw</span><span class=\"token operator\">==</span><span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>wordcard<span class=\"token punctuation\">.</span>debug<span class=\"token operator\">-</span>z4MN<span class=\"token operator\">-</span><span class=\"token number\">3</span>uI1JjNQYgIxbhNYQ<span class=\"token operator\">==</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>arm64<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token number\">8</span>aOWO0BH2NR<span class=\"token operator\">-</span><span class=\"token class-name\">PT5SN6_9Sw</span><span class=\"token operator\">==</span><span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>wordcard<span class=\"token punctuation\">.</span>debug<span class=\"token operator\">-</span>z4MN<span class=\"token operator\">-</span><span class=\"token number\">3</span>uI1JjNQYgIxbhNYQ<span class=\"token operator\">==</span><span class=\"token operator\">/</span>base<span class=\"token punctuation\">.</span>apk<span class=\"token operator\">!</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>arm64<span class=\"token operator\">-</span>v8a<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>lib64<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span>system_ext<span class=\"token operator\">/</span>lib64<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">installProvider</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">7479</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">installContentProviders</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">6985</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleBindApplication</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">6756</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span>-$$<span class=\"token class-name\">Nest</span>$<span class=\"token function\">mhandleBindApplication</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Unknown</span> <span class=\"token class-name\">Source</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span>$<span class=\"token class-name\">H</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2129</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>Handler</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Handler</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">106</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>Looper</span><span class=\"token punctuation\">.</span><span class=\"token function\">loopOnce</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Looper</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>Looper</span><span class=\"token punctuation\">.</span><span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Looper</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">288</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">7884</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>Method</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Native</span> <span class=\"token class-name\">Method</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>RuntimeInit</span>$<span class=\"token class-name\">MethodAndArgsCaller</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RuntimeInit</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">548</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>ZygoteInit</span><span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZygoteInit</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">936</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     <span class=\"token class-name\">Caused</span> by<span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassNotFoundException</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Didn</span>'t find <span class=\"token keyword\">class</span> <span class=\"token string\">\"com.bytedance.sdk.openadsdk.TTFileProvider\"</span> on path<span class=\"token operator\">:</span> <span class=\"token class-name\">DexPathList</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>zip file <span class=\"token string\">\"/data/app/~~8aOWO0BH2NR-PT5SN6_9Sw==/com.maxim.wordcard.debug-z4MN-3uI1JjNQYgIxbhNYQ==/base.apk\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>nativeLibraryDirectories<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token number\">8</span>aOWO0BH2NR<span class=\"token operator\">-</span><span class=\"token class-name\">PT5SN6_9Sw</span><span class=\"token operator\">==</span><span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>wordcard<span class=\"token punctuation\">.</span>debug<span class=\"token operator\">-</span>z4MN<span class=\"token operator\">-</span><span class=\"token number\">3</span>uI1JjNQYgIxbhNYQ<span class=\"token operator\">==</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>arm64<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token number\">8</span>aOWO0BH2NR<span class=\"token operator\">-</span><span class=\"token class-name\">PT5SN6_9Sw</span><span class=\"token operator\">==</span><span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>wordcard<span class=\"token punctuation\">.</span>debug<span class=\"token operator\">-</span>z4MN<span class=\"token operator\">-</span><span class=\"token number\">3</span>uI1JjNQYgIxbhNYQ<span class=\"token operator\">==</span><span class=\"token operator\">/</span>base<span class=\"token punctuation\">.</span>apk<span class=\"token operator\">!</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>arm64<span class=\"token operator\">-</span>v8a<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>lib64<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span>system_ext<span class=\"token operator\">/</span>lib64<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">dalvik<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span></span>BaseDexClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">findClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BaseDexClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">259</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">379</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">312</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>AppComponentFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">instantiateProvider</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AppComponentFactory</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">147</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">androidx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>CoreComponentFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">instantiateProvider</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CoreComponentFactory</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">67</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">installProvider</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">7463</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">installContentProviders</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">6985</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleBindApplication</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">6756</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span>-$$<span class=\"token class-name\">Nest</span>$<span class=\"token function\">mhandleBindApplication</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Unknown</span> <span class=\"token class-name\">Source</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span>$<span class=\"token class-name\">H</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2129</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>Handler</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Handler</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">106</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>Looper</span><span class=\"token punctuation\">.</span><span class=\"token function\">loopOnce</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Looper</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>Looper</span><span class=\"token punctuation\">.</span><span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Looper</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">288</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">7884</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>Method</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Native</span> <span class=\"token class-name\">Method</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>RuntimeInit</span>$<span class=\"token class-name\">MethodAndArgsCaller</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RuntimeInit</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">548</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>ZygoteInit</span><span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZygoteInit</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">936</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    \t<span class=\"token class-name\">Suppressed</span><span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>NoClassDefFoundError</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Failed</span> resolution of<span class=\"token operator\">:</span> <span class=\"token class-name\">Landroid</span><span class=\"token operator\">/</span>support<span class=\"token operator\">/</span>v4<span class=\"token operator\">/</span>content<span class=\"token operator\">/</span><span class=\"token class-name\">FileProvider</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>VMClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">findLoadedClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Native</span> <span class=\"token class-name\">Method</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">findLoadedClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">738</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">363</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        \t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token number\">15</span> more</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     <span class=\"token class-name\">Caused</span> by<span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassNotFoundException</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Didn</span>'t find <span class=\"token keyword\">class</span> <span class=\"token string\">\"android.support.v4.content.FileProvider\"</span> on path<span class=\"token operator\">:</span> <span class=\"token class-name\">DexPathList</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>zip file <span class=\"token string\">\"/data/app/~~8aOWO0BH2NR-PT5SN6_9Sw==/com.maxim.wordcard.debug-z4MN-3uI1JjNQYgIxbhNYQ==/base.apk\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>nativeLibraryDirectories<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token number\">8</span>aOWO0BH2NR<span class=\"token operator\">-</span><span class=\"token class-name\">PT5SN6_9Sw</span><span class=\"token operator\">==</span><span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>wordcard<span class=\"token punctuation\">.</span>debug<span class=\"token operator\">-</span>z4MN<span class=\"token operator\">-</span><span class=\"token number\">3</span>uI1JjNQYgIxbhNYQ<span class=\"token operator\">==</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>arm64<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span>data<span class=\"token operator\">/</span>app<span class=\"token operator\">/</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token number\">8</span>aOWO0BH2NR<span class=\"token operator\">-</span><span class=\"token class-name\">PT5SN6_9Sw</span><span class=\"token operator\">==</span><span class=\"token operator\">/</span>com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>wordcard<span class=\"token punctuation\">.</span>debug<span class=\"token operator\">-</span>z4MN<span class=\"token operator\">-</span><span class=\"token number\">3</span>uI1JjNQYgIxbhNYQ<span class=\"token operator\">==</span><span class=\"token operator\">/</span>base<span class=\"token punctuation\">.</span>apk<span class=\"token operator\">!</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>arm64<span class=\"token operator\">-</span>v8a<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>lib64<span class=\"token punctuation\">,</span> <span class=\"token operator\">/</span>system_ext<span class=\"token operator\">/</span>lib64<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">dalvik<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">.</span></span>BaseDexClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">findClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BaseDexClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">259</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">379</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        at <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span>ClassLoader</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">312</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>app 目录下的 build.gradle 配置如下：</p>\n<pre><code class=\"language-gradle\">dependencies &#123;\n\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\n    // Ad begin\n    implementation 'com.pangle.cn:ads-sdk-pro:5.4.1.6'\n    // Ad end\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\n\n    implementation  'com.umeng.umsdk:common:9.4.7'// required\n    implementation  'com.umeng.umsdk:asms:1.4.0'// required\n    implementation 'com.umeng.umsdk:apm:1.7.0' // crash and performance\n    implementation  'com.umeng.umsdk:abtest:1.0.0'// optional\n\n    implementation 'com.github.deano2390:MaterialShowcaseView:1.3.7'\n    // Navigation start\n    def nav_version = &quot;2.5.3&quot;\n    // Kotlin\n    implementation (&quot;androidx.navigation:navigation-fragment-ktx:$nav_version&quot;)\n    implementation (&quot;androidx.navigation:navigation-ui-ktx:$nav_version&quot;)\n    // Feature module Support\n    implementation &quot;androidx.navigation:navigation-dynamic-features-fragment:$nav_version&quot;\n    // Navigation end\n\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'androidx.appcompat:appcompat:1.6.0'\n    implementation 'com.google.android.material:material:1.8.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'\n    implementation &quot;androidx.activity:activity-ktx:1.7.1&quot;\n    implementation &quot;androidx.fragment:fragment-ktx:1.5.7&quot;\n\n    api &quot;io.reactivex.rxjava2:rxandroid:2.1.0&quot;\n    implementation 'androidx.lifecycle:lifecycle-livedata-core-ktx:2.5.1'\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\n    // room start\n    def room_version = &quot;2.5.1&quot;\n    implementation(&quot;androidx.room:room-runtime:$room_version&quot;)\n    annotationProcessor(&quot;androidx.room:room-compiler:$room_version&quot;)\n    // To use Kotlin annotation processing tool (kapt)\n    kapt(&quot;androidx.room:room-compiler:$room_version&quot;)\n    // To use Kotlin Symbol Processing (KSP)\n//    ksp(&quot;androidx.room:room-compiler:$room_version&quot;)\n    // optional - Kotlin Extensions and Coroutines support for Room\n    implementation(&quot;androidx.room:room-ktx:$room_version&quot;)\n    // optional - RxJava2 support for Room\n    implementation(&quot;androidx.room:room-rxjava2:$room_version&quot;)\n    // optional - RxJava3 support for Room\n    implementation(&quot;androidx.room:room-rxjava3:$room_version&quot;)\n    // optional - Guava support for Room, including Optional and ListenableFuture\n    implementation(&quot;androidx.room:room-guava:$room_version&quot;)\n    // optional - Test helpers\n    testImplementation(&quot;androidx.room:room-testing:$room_version&quot;)\n    // optional - Paging 3 Integration\n    implementation(&quot;androidx.room:room-paging:$room_version&quot;)\n    // room end\n\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\n&#125;\n</code></pre>\n<h1 id=\"异常分析\"><a class=\"anchor\" href=\"#异常分析\">#</a> 异常分析</h1>\n<p>打开  <code>TTFileProvider</code> ， 它继承的是  <code>android.support.v4.content.FileProvider</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>bytedance<span class=\"token punctuation\">.</span>sdk<span class=\"token punctuation\">.</span>openadsdk</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileProvider</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TTFileProvider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FileProvider</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TTFileProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如果添加包含  <code>android.support.v4.content.FileProvider</code>  的依赖， <code>implementation 'com.android.support:support-v4:26.1.0'</code>  则编译报出好几个类重复定义的异常。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Duplicate</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>ResultReceiver</span> found in modules core<span class=\"token operator\">-</span><span class=\"token number\">1.9</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>runtime <span class=\"token punctuation\">(</span>androidx<span class=\"token punctuation\">.</span>core<span class=\"token operator\">:</span>core<span class=\"token operator\">:</span><span class=\"token number\">1.9</span><span class=\"token number\">.0</span><span class=\"token punctuation\">)</span> and support<span class=\"token operator\">-</span>compat<span class=\"token operator\">-</span><span class=\"token number\">26.1</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>runtime <span class=\"token punctuation\">(</span>com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>support<span class=\"token operator\">:</span>support<span class=\"token operator\">-</span>compat<span class=\"token operator\">:</span><span class=\"token number\">26.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Duplicate</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>ResultReceiver</span>$<span class=\"token number\">1</span> found in modules core<span class=\"token operator\">-</span><span class=\"token number\">1.9</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>runtime <span class=\"token punctuation\">(</span>androidx<span class=\"token punctuation\">.</span>core<span class=\"token operator\">:</span>core<span class=\"token operator\">:</span><span class=\"token number\">1.9</span><span class=\"token number\">.0</span><span class=\"token punctuation\">)</span> and support<span class=\"token operator\">-</span>compat<span class=\"token operator\">-</span><span class=\"token number\">26.1</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>runtime <span class=\"token punctuation\">(</span>com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>support<span class=\"token operator\">:</span>support<span class=\"token operator\">-</span>compat<span class=\"token operator\">:</span><span class=\"token number\">26.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Duplicate</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>ResultReceiver</span>$<span class=\"token class-name\">MyResultReceiver</span> found in modules core<span class=\"token operator\">-</span><span class=\"token number\">1.9</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>runtime <span class=\"token punctuation\">(</span>androidx<span class=\"token punctuation\">.</span>core<span class=\"token operator\">:</span>core<span class=\"token operator\">:</span><span class=\"token number\">1.9</span><span class=\"token number\">.0</span><span class=\"token punctuation\">)</span> and support<span class=\"token operator\">-</span>compat<span class=\"token operator\">-</span><span class=\"token number\">26.1</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>runtime <span class=\"token punctuation\">(</span>com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>support<span class=\"token operator\">:</span>support<span class=\"token operator\">-</span>compat<span class=\"token operator\">:</span><span class=\"token number\">26.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Duplicate</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>ResultReceiver</span>$<span class=\"token class-name\">MyRunnable</span> found in modules core<span class=\"token operator\">-</span><span class=\"token number\">1.9</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>runtime <span class=\"token punctuation\">(</span>androidx<span class=\"token punctuation\">.</span>core<span class=\"token operator\">:</span>core<span class=\"token operator\">:</span><span class=\"token number\">1.9</span><span class=\"token number\">.0</span><span class=\"token punctuation\">)</span> and support<span class=\"token operator\">-</span>compat<span class=\"token operator\">-</span><span class=\"token number\">26.1</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>runtime <span class=\"token punctuation\">(</span>com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>support<span class=\"token operator\">:</span>support<span class=\"token operator\">-</span>compat<span class=\"token operator\">:</span><span class=\"token number\">26.1</span><span class=\"token number\">.0</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>异常日志里有一段警告</p>\n<blockquote>\n<p>Your project has set  <code>android.useAndroidX=true</code> , but configuration  <code>:app:googleDebugRuntimeClasspath</code>  still contains legacy support libraries, which may cause runtime issues.<br />\nThis behavior will not be allowed in Android Gradle plugin 8.0.<br />\nPlease use only AndroidX dependencies or set  <code>android.enableJetifier=true</code>  in the  <code>gradle.properties</code>  file to migrate your project to AndroidX (see <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vamV0cGFjay9hbmRyb2lkeC9taWdyYXRl\">https://developer.android.com/jetpack/androidx/migrate</span> for more info).</p>\n</blockquote>\n<p>我原来的   <code>gradle.properties</code>  只有  <code>android.useAndroidX=true</code>  的配置，按照警告的建议，修改后如下：</p>\n<pre><code>android.useAndroidX=true\nandroid.enableJetifier=true\n</code></pre>\n<h1 id=\"migrate-an-existing-project-using-android-studio\"><a class=\"anchor\" href=\"#migrate-an-existing-project-using-android-studio\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5nb29nbGUuY24vamV0cGFjay9hbmRyb2lkeC9taWdyYXRlI21pZ3JhdGVfYW5fZXhpc3RpbmdfcHJvamVjdF91c2luZ19hbmRyb2lkX3N0dWRpbw==\">Migrate an existing project using Android Studio</span></h1>\n<p>With Android Studio 3.2 and higher, you can migrate an existing project to AndroidX by selecting Refactor &gt; Migrate to AndroidX from the menu bar.</p>\n<p>The refactor command makes use of two flags. By default, both of them are set to  <code>true</code>  in your  <code>gradle.properties</code>  file:</p>\n<p><code>android.useAndroidX=true</code> <br />\nThe Android plugin uses the appropriate AndroidX library instead of a Support Library.<br />\n <code>android.enableJetifier=true</code> <br />\nThe Android plugin automatically migrates existing third-party libraries to use AndroidX by rewriting their binaries.</p>\n<p>看这描述，开启  <code>android.enableJetifier=true</code>  后，编译时将重写二进制文件，将  <code>android.support.v4.content.FileProvider</code>  改为 AndroidX 对应的类  <code>androidx.core.content.FileProvider</code>  相当于将穿山甲库里引用的 support 的类，重写为 AndroiX 的，如下</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>bytedance<span class=\"token punctuation\">.</span>sdk<span class=\"token punctuation\">.</span>openadsdk</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">androidx<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileProvider</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TTFileProvider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FileProvider</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TTFileProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>至此问题原因找到并解决，移植 AndroidX 不彻底，所致，把问题暴露出来。</p>\n",
            "tags": [
                "穿山甲, 集成报错，AndroidX migrate，FileProvider not found"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/07/30/RxJava-Schedule/",
            "url": "https://limxtop1989.github.io/limxtop/2023/07/30/RxJava-Schedule/",
            "title": "RxJava Schedule",
            "date_published": "2023-07-30T09:08:48.000Z",
            "content_html": "<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Observable</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Observable<span class=\"token punctuation\">.</span>OnSubscribe</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Subscriber</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> observer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>observer<span class=\"token punctuation\">.</span><span class=\"token function\">isUnsubscribed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    observer<span class=\"token punctuation\">.</span><span class=\"token function\">onNext</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                observer<span class=\"token punctuation\">.</span><span class=\"token function\">onCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            observer<span class=\"token punctuation\">.</span><span class=\"token function\">onError</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Subscriber</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onNext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Next: \"</span> <span class=\"token operator\">+</span> item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: \"</span> <span class=\"token operator\">+</span> error<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sequence complete.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Running result:</p>\n<pre><code>Next: 1\nNext: 2\nNext: 3\nNext: 4\nSequence complete.\n</code></pre>\n<p>一个 Observable 需要一个 OnSubscribe &amp; Subscriber 配套成组。 每组 Observable 构成上下游关系，operator 调用时，会创建该层级的 Observable 并持有上游的 Observable 对象。 当该层级 Observable 被 subscribe 时， onSubscribe 会实例化上游的 Observer，它持有下游的 Observer。  subscribe 上游的 Observable。 由此出发链式 subscribe 调用，直到最上游的 Observable，其 onSubscribe 发射数据<br />\n上游的 Observer 会调用下游的 Observer ，如此链式逐级调用 Observer 的 接口方法，如 onNext ，直到最下游 。</p>\n<pre><code>    /**\n     * Modifies an ObservableSource to perform its emissions and notifications on a specified &#123;@link Scheduler&#125;,\n     * asynchronously with an unbounded buffer of configurable &quot;island size&quot; and optionally delays onError notifications.\n     * &lt;p&gt;\n     * &lt;img width=&quot;640&quot; height=&quot;308&quot; src=&quot;https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/observeOn.png&quot; alt=&quot;&quot;&gt;\n     * &lt;dl&gt;\n     *  &lt;dt&gt;&lt;b&gt;Scheduler:&lt;/b&gt;&lt;/dt&gt;\n     *  &lt;dd&gt;You specify which &#123;@link Scheduler&#125; this operator will use.&lt;/dd&gt;\n     * &lt;/dl&gt;\n     * &lt;p&gt;&quot;Island size&quot; indicates how large chunks the unbounded buffer allocates to store the excess elements waiting to be consumed\n     * on the other side of the asynchronous boundary. Values below 16 are not recommended in performance sensitive scenarios.\n     *\n     * @param scheduler\n     *            the &#123;@link Scheduler&#125; to notify &#123;@link Observer&#125;s on\n     * @param delayError\n     *            indicates if the onError notification may not cut ahead of onNext notification on the other side of the\n     *            scheduling boundary. If true a sequence ending in onError will be replayed in the same order as was received\n     *            from upstream\n     * @param bufferSize the size of the buffer.\n     * @return the source ObservableSource modified so that its &#123;@link Observer&#125;s are notified on the specified\n     *         &#123;@link Scheduler&#125;\n     * @see &lt;a href=&quot;http://reactivex.io/documentation/operators/observeon.html&quot;&gt;ReactiveX operators documentation: ObserveOn&lt;/a&gt;\n     * @see &lt;a href=&quot;http://www.grahamlea.com/2014/07/rxjava-threading-examples/&quot;&gt;RxJava Threading Examples&lt;/a&gt;\n     * @see #subscribeOn\n     * @see #observeOn(Scheduler)\n     * @see #observeOn(Scheduler, boolean)\n     */\n    @CheckReturnValue\n    @SchedulerSupport(SchedulerSupport.CUSTOM)\n    public final Observable&lt;T&gt; observeOn(Scheduler scheduler, boolean delayError, int bufferSize) &#123;\n        ObjectHelper.requireNonNull(scheduler, &quot;scheduler is null&quot;);\n        ObjectHelper.verifyPositive(bufferSize, &quot;bufferSize&quot;);\n        return RxJavaPlugins.onAssembly(new ObservableObserveOn&lt;T&gt;(this, scheduler, delayError, bufferSize));\n    &#125;\n</code></pre>\n<pre><code>    /**\n     * Asynchronously subscribes Observers to this ObservableSource on the specified &#123;@link Scheduler&#125;.\n     * &lt;p&gt;\n     * &lt;img width=&quot;640&quot; height=&quot;305&quot; src=&quot;https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/subscribeOn.png&quot; alt=&quot;&quot;&gt;\n     * &lt;dl&gt;\n     *  &lt;dt&gt;&lt;b&gt;Scheduler:&lt;/b&gt;&lt;/dt&gt;\n     *  &lt;dd&gt;You specify which &#123;@link Scheduler&#125; this operator will use.&lt;/dd&gt;\n     * &lt;/dl&gt;\n     *\n     * @param scheduler\n     *            the &#123;@link Scheduler&#125; to perform subscription actions on\n     * @return the source ObservableSource modified so that its subscriptions happen on the\n     *         specified &#123;@link Scheduler&#125;\n     * @see &lt;a href=&quot;http://reactivex.io/documentation/operators/subscribeon.html&quot;&gt;ReactiveX operators documentation: SubscribeOn&lt;/a&gt;\n     * @see &lt;a href=&quot;http://www.grahamlea.com/2014/07/rxjava-threading-examples/&quot;&gt;RxJava Threading Examples&lt;/a&gt;\n     * @see #observeOn\n     */\n    @CheckReturnValue\n    @SchedulerSupport(SchedulerSupport.CUSTOM)\n    public final Observable&lt;T&gt; subscribeOn(Scheduler scheduler) &#123;\n        ObjectHelper.requireNonNull(scheduler, &quot;scheduler is null&quot;);\n        return RxJavaPlugins.onAssembly(new ObservableSubscribeOn&lt;T&gt;(this, scheduler));\n    &#125;\n</code></pre>\n<pre><code>Observable.create(OnSubscribe)\n.observeOn()\n.subscribeOn()\n// 1. subscribe\n.subscribe(Subscriber);\n</code></pre>\n<pre><code>\npublic final class ObservableSubscribeOn&lt;T&gt; extends AbstractObservableWithUpstream&lt;T, T&gt; &#123;\n    final Scheduler scheduler;\n\n    public ObservableSubscribeOn(ObservableSource&lt;T&gt; source, Scheduler scheduler) &#123;\n        super(source);\n        this.scheduler = scheduler;\n    &#125;\n\n    @Override\n    public void subscribeActual(final Observer&lt;? super T&gt; observer) &#123;\n        // 2. 实例话上游 Observer\n        final SubscribeOnObserver&lt;T&gt; parent = new SubscribeOnObserver&lt;T&gt;(observer);\n\n        observer.onSubscribe(parent);\n        // 3. 使用上游 Observer 订阅上游 Observable ，具体是在 SubscribeTask 内执行。\n        parent.setDisposable(scheduler.scheduleDirect(new SubscribeTask(parent)));\n    &#125;\n\n    static final class SubscribeOnObserver&lt;T&gt; extends AtomicReference&lt;Disposable&gt; implements Observer&lt;T&gt;, Disposable &#123;\n\n        private static final long serialVersionUID = 8094547886072529208L;\n        final Observer&lt;? super T&gt; downstream;\n\n        final AtomicReference&lt;Disposable&gt; upstream;\n\n        SubscribeOnObserver(Observer&lt;? super T&gt; downstream) &#123;\n            this.downstream = downstream;\n            this.upstream = new AtomicReference&lt;Disposable&gt;();\n        &#125;\n\n        @Override\n        public void onSubscribe(Disposable d) &#123;\n            DisposableHelper.setOnce(this.upstream, d);\n        &#125;\n\n        @Override\n        public void onNext(T t) &#123;\n            downstream.onNext(t);\n        &#125;\n\n        @Override\n        public void onError(Throwable t) &#123;\n            downstream.onError(t);\n        &#125;\n\n        @Override\n        public void onComplete() &#123;\n            downstream.onComplete();\n        &#125;\n\n        @Override\n        public void dispose() &#123;\n            DisposableHelper.dispose(upstream);\n            DisposableHelper.dispose(this);\n        &#125;\n\n        @Override\n        public boolean isDisposed() &#123;\n            return DisposableHelper.isDisposed(get());\n        &#125;\n\n        void setDisposable(Disposable d) &#123;\n            DisposableHelper.setOnce(this, d);\n        &#125;\n    &#125;\n\n    final class SubscribeTask implements Runnable &#123;\n        private final SubscribeOnObserver&lt;T&gt; parent;\n\n        SubscribeTask(SubscribeOnObserver&lt;T&gt; parent) &#123;\n            this.parent = parent;\n        &#125;\n\n        @Override\n        public void run() &#123;\n            // 4. 订阅上游 Observable ObservableObserveOn\n            source.subscribe(parent);\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n",
            "tags": [
                "RxJava, 线程切换"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/07/30/AbstractQueuedSynchronizer/",
            "url": "https://limxtop1989.github.io/limxtop/2023/07/30/AbstractQueuedSynchronizer/",
            "title": "Java 并发框架 AbstractQueuedSynchronizer",
            "date_published": "2023-07-30T00:58:02.000Z",
            "content_html": "<p><img data-src=\"https://s3.uuu.ovh/imgs/2023/07/30/84de061a940ab561.png\" alt=\"\" /><br />\n关于 AbstractQueuedSynchronizer 的源码分析，我以 ReentrantLock 为例，类图如上。</p>\n<blockquote>\n<p>A reentrant mutual exclusion Lock with the same basic behavior and semantics as the implicit monitor lock accessed using synchronized methods and statements, but with extended capabilities.</p>\n</blockquote>\n<blockquote>\n<p>A ReentrantLock is owned by the thread last successfully locking, but not yet unlocking it. A thread invoking lock will return, successfully acquiring the lock, when the lock is not owned by another thread. The method will return immediately if the current thread already owns the lock. This can be checked using methods isHeldByCurrentThread, and getHoldCount.</p>\n</blockquote>\n<p>Lock 接口定义了关于 Lock 的三个主要操作：</p>\n<ol>\n<li>lock();</li>\n<li>unLock();</li>\n<li>newCondition();</li>\n</ol>\n<p><code>ReentrantLock</code>  实现  <code>Lock</code>  接口，但实现的细节全都委派给内部类  <code>Sync</code>  的具体实例。其中值得注意的是，创建  <code>ReentrantLock</code>  实例时，可以传递  <code>fair</code>  参数，指明实现的是公平锁还是非公平锁，默认为非公平锁。</p>\n<p>总体流程如图<br />\n<img data-src=\"https://s3.uuu.ovh/imgs/2023/07/30/602b88085d477f84.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    * Creates an instance of &#123;@code ReentrantLock&#125;.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    * This is equivalent to using &#123;@code ReentrantLock(false)&#125;.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">ReentrantLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    sync <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NonfairSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    * Creates an instance of &#123;@code ReentrantLock&#125; with the</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    * given fairness policy.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    *</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    * @param fair &#123;@code true&#125; if this lock should use a fair ordering policy</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">ReentrantLock</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> fair<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    sync <span class=\"token operator\">=</span> fair <span class=\"token operator\">?</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FairSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NonfairSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>公平锁指线程  <code>lock</code>  时得按顺序排队，等待队列为空时才抢占锁，否则进入队列排队等待。</p>\n<h1 id=\"thread-b-加锁失败进入等待\"><a class=\"anchor\" href=\"#thread-b-加锁失败进入等待\">#</a> Thread B 加锁失败，进入等待</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.ReentrantLock.FairSync#lock</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.AbstractQueuedSynchronizer#acquire</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    * Acquires in exclusive mode, ignoring interrupts.  Implemented</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    * by invoking at least once &#123;@link #tryAcquire&#125;,</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    * returning on success.  Otherwise the thread is queued, possibly</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    * repeatedly blocking and unblocking, invoking &#123;@link</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    * #tryAcquire&#125; until success.  This method can be used</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    * to implement method &#123;@link Lock#lock&#125;.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    *</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    * @param arg the acquire argument.  This value is conveyed to</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    *        &#123;@link #tryAcquire&#125; but is otherwise uninterpreted and</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    *        can represent anything you like.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">acquire</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">tryAcquire</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token function\">acquireQueued</span><span class=\"token punctuation\">(</span><span class=\"token function\">addWaiter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Node</span><span class=\"token punctuation\">.</span>EXCLUSIVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token function\">selfInterrupt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>先 <code>tryAcquire</code>  尝试获得锁，尝试失败，则  <code>acquireQueued</code>  。在 AbstractQueuedSynchronizer  <code>tryAcquire</code>  是模版方法，强制子类实现</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.ReentrantLock.FairSync#tryAcquire</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    * Fair version of tryAcquire.  Don't grant access unless</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    * recursive call or no waiters or is first.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">tryAcquire</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> acquires<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">final</span> <span class=\"token class-name\">Thread</span> current <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 没有线程持有锁，(线程成功获得锁时，会将 state 递增 acquires)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasQueuedPredecessors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token function\">compareAndSetState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> acquires<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token function\">setExclusiveOwnerThread</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current <span class=\"token operator\">==</span> <span class=\"token function\">getExclusiveOwnerThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 已经有线程持有锁，判断该锁拥有者是不是当前线程，是则递增 acquires 直接返回 true 表示成功加锁。</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 线程加锁后，可以继续加锁，是故可重入锁</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">int</span> nextc <span class=\"token operator\">=</span> c <span class=\"token operator\">+</span> acquires<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextc <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Maximum lock count exceeded\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>nextc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 该锁被其他线程持有，返回 false， 加锁失败，执行 acquireQueued 进入等待队列。</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol>\n<li>获得锁的逻辑很清晰简单，获取状态，当 state == 0 时，意味着没有线程持有该锁，再判断队列没有前驱并且用 CAS 操作更新 state，使其大于 0，如果更新操作成功，当前线程获得锁，在 setExclusiveOwnerThread 方法里将 exclusiveOwnerThread 指向当前线程。(compare expectedValue with the state value in the memory, and set the state value only if they are equal, which is atomic operation. 由于 state &amp; exclusiveOwnerThread 是共享变量，此代码块是 critical section (临界区)，所以比较和更新必须是原子操作，防止线程 A 比较更新中间，线程 B 更新 state，导致线程 AB 同时获得锁)</li>\n<li>如果 state &gt; 0, 意味着已经有线程持有该锁，但不必灰心，代码进一步判断当前锁的持有者是否是当前线程，如果是，则累加锁数量。</li>\n<li>我们重点来看加锁失败，加入等待队列的情况。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.AbstractQueuedSynchronizer#addWaiter</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    * Creates and enqueues node for current thread and given mode.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    * @param mode Node.EXCLUSIVE for exclusive, Node.SHARED for shared</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    * @return the new node</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">Node</span> <span class=\"token function\">addWaiter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Node</span> mode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">Node</span> node <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// Try the fast path of enq; backup to full enq on failure</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token class-name\">Node</span> pred <span class=\"token operator\">=</span> tail<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pred <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        node<span class=\"token punctuation\">.</span>prev <span class=\"token operator\">=</span> pred<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">compareAndSetTail</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            pred<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">enq</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>将当前线程和锁模式  <code>exclusive</code>  封装在  <code>Node</code>  里，加入队列末尾。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.AbstractQueuedSynchronizer#acquireQueued</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    * Acquires in exclusive uninterruptible mode for thread already in</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    * queue. Used by condition wait methods as well as acquire.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    * @param node the node</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    * @param arg the acquire argument</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    * @return &#123;@code true&#125; if interrupted while waiting</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">acquireQueued</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Node</span> node<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">boolean</span> failed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">boolean</span> interrupted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">final</span> <span class=\"token class-name\">Node</span> p <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">predecessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// 等待队列有前驱等待节点，才进入此方法，但此时可能前驱节点已经移除，</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 是故这里判断等待队列为空，重新尝试获取锁</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> head <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">tryAcquire</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token function\">setHead</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                p<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// help GC</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                failed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">return</span> interrupted<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">// 重点在这里</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">shouldParkAfterFailedAcquire</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token function\">parkAndCheckInterrupt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                interrupted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>failed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token function\">cancelAcquire</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>先简略理解下  <code>shouldParkAfterFailedAcquire</code> ，如果前驱节点</p>\n<ol>\n<li>是 Signal，则返回 true，执行 parkAndCheckInterrupt。</li>\n<li>是 Cancel，则移除 Cancel 的等待节点.</li>\n<li>将非 Cancel 的前驱节点，状态升级为 Signal，下次循环进来，就是 case 1.</li>\n</ol>\n<p>在这里，我们记住，当前等待线程的前驱节点，到最后是 Signal 状态。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.AbstractQueuedSynchronizer#shouldParkAfterFailedAcquire</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    * Checks and updates status for a node that failed to acquire.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    * Returns true if thread should block. This is the main signal</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    * control in all acquire loops.  Requires that pred == node.prev.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    * @param pred node's predecessor holding status</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    * @param node the node</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    * @return &#123;@code true&#125; if thread should block</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">shouldParkAfterFailedAcquire</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Node</span> pred<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Node</span> node<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">int</span> ws <span class=\"token operator\">=</span> pred<span class=\"token punctuation\">.</span>waitStatus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ws <span class=\"token operator\">==</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">.</span>SIGNAL<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            * This node has already set status asking a release</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            * to signal it, so it can safely park.</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ws <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            * Predecessor was cancelled. Skip over predecessors and</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            * indicate retry.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            node<span class=\"token punctuation\">.</span>prev <span class=\"token operator\">=</span> pred <span class=\"token operator\">=</span> pred<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">.</span>waitStatus <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        pred<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            * waitStatus must be 0 or PROPAGATE.  Indicate that we</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            * need a signal, but don't park yet.  Caller will need to</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            * retry to make sure it cannot acquire before parking.</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            */</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token function\">compareAndSetWaitStatus</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> ws<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">.</span>SIGNAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接下来，我们看  <code>parkAndCheckInterrupt</code>  则当前线程休眠，开始进入等待态（没什么特别的，就设置一个状态标记，告诉线程调度算法不用拿此线程参与调度计算），并检查中断状态。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.AbstractQueuedSynchronizer#parkAndCheckInterrupt</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    * Convenience method to park and then check if interrupted</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    * @return &#123;@code true&#125; if interrupted</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">parkAndCheckInterrupt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">LockSupport</span><span class=\"token punctuation\">.</span><span class=\"token function\">park</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 这行代码执行完毕，线程进入休眠，等待其他线程调用 unpark 后，执行下一行的 retrun</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">interrupted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.LockSupport#park(java.lang.Object)</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Disables the current thread for thread scheduling purposes unless the</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * permit is available.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * &lt;p>If the permit is available then it is consumed and the call returns</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * immediately; otherwise</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * the current thread becomes disabled for thread scheduling</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * purposes and lies dormant until one of three things happens:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * &lt;ul></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * &lt;li>Some other thread invokes &#123;@link #unpark unpark&#125; with the</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * current thread as the target; or</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * &lt;li>Some other thread &#123;@linkplain Thread#interrupt interrupts&#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * the current thread; or</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * &lt;li>The call spuriously (that is, for no reason) returns.</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * &lt;/ul></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * &lt;p>This method does &lt;em>not&lt;/em> report which of these caused the</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> * method to return. Callers should re-check the conditions which caused</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> * the thread to park in the first place. Callers may also determine,</pre></td></tr><tr><td data-num=\"23\"></td><td><pre> * for example, the interrupt status of the thread upon return.</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> * @param blocker the synchronization object responsible for this</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> *        thread parking</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> * @since 1.6</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">park</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> blocker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token class-name\">Thread</span> t <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">setBlocker</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> blocker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    UNSAFE<span class=\"token punctuation\">.</span><span class=\"token function\">park</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token function\">setBlocker</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>到这里，Thread B 线程加锁失败，进入等待队列，休眠，等待其他线程释放锁，通知唤醒等待队列的线程，重新竞争获得锁。我们开始看其他线程释放锁流程。</p>\n<h1 id=\"thread-b-释放锁\"><a class=\"anchor\" href=\"#thread-b-释放锁\">#</a> Thread B 释放锁</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.ReentrantLock#unlock</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Attempts to release this lock.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * &lt;p>If the current thread is the holder of this lock then the hold</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * count is decremented.  If the hold count is now zero then the lock</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * is released.  If the current thread is not the holder of this</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * lock then &#123;@link IllegalMonitorStateException&#125; is thrown.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @throws IllegalMonitorStateException if the current thread does not</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> *         hold this lock</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    sync<span class=\"token punctuation\">.</span><span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.AbstractQueuedSynchronizer#release</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Releases in exclusive mode.  Implemented by unblocking one or</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * more threads if &#123;@link #tryRelease&#125; returns true.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * This method can be used to implement method &#123;@link Lock#unlock&#125;.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @param arg the release argument.  This value is conveyed to</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> *        &#123;@link #tryRelease&#125; but is otherwise uninterpreted and</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> *        can represent anything you like.</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @return the value returned from &#123;@link #tryRelease&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">tryRelease</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">Node</span> h <span class=\"token operator\">=</span> head<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> h<span class=\"token punctuation\">.</span>waitStatus <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token function\">unparkSuccessor</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>尝试释放锁，然后 unpark 锁等待队列的第一个线程，使其进入等待调度状态。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.ReentrantLock.Sync#tryRelease</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">tryRelease</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> releases<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> releases<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token function\">getExclusiveOwnerThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalMonitorStateException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">boolean</span> free <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        free <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">setExclusiveOwnerThread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> free<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.locks.AbstractQueuedSynchronizer#unparkSuccessor</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>* Wakes up node's successor, if one exists.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>* @param node the node</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">unparkSuccessor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Node</span> node<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    * If status is negative (i.e., possibly needing signal) try</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    * to clear in anticipation of signalling.  It is OK if this</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    * fails or if status is changed by waiting thread.</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">int</span> ws <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>waitStatus<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ws <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">compareAndSetWaitStatus</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> ws<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    * Thread to unpark is held in successor, which is normally</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    * just the next node.  But if cancelled or apparently null,</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    * traverse backwards from tail to find the actual</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    * non-cancelled successor.</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token class-name\">Node</span> s <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> s<span class=\"token punctuation\">.</span>waitStatus <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        s <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Node</span> t <span class=\"token operator\">=</span> tail<span class=\"token punctuation\">;</span> t <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">!=</span> node<span class=\"token punctuation\">;</span> t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>waitStatus <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        s <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token class-name\">LockSupport</span><span class=\"token punctuation\">.</span><span class=\"token function\">unpark</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>传入 h 指向的是哨兵头节点，找到锁等待队列里第一个  <code>waitStatus &lt;= 0</code>  即 SIGNAL CONDITION PROPAGATE 三者之一的节点，并 unpark 唤醒节点里的线程。<br />\n当上文 Thread B 加锁失败，进入等待锁队列的节点</p>\n<ol>\n<li>是这个头节点，加锁线程被唤醒，thread schedule 分配它运行后，它从 park 中返回，并检测记录 interrupted，进入下一次循环，此时它的前驱就是 head 哨兵节点，再次执行  <code>tryAcquire</code>  流程。</li>\n<li>不是头节点，那么等待前面的节点都纷纷通过  <code>tryAcquire</code>  获得锁，然后释放锁后，文中上一个加锁的线程所在节点最终会成为头节点。</li>\n</ol>\n<p>获得锁成功后，返回 interrupted 中断状态，如果该线程是 interrupted 而进入等待态，则返回后重置还原 interrupted 状态。</p>\n<p>线程从休眠进入等待态有三种 cases 见  <code>java.util.concurrent.locks.LockSupport#park(java.lang.Object)</code> ：</p>\n<ol>\n<li>Some other thread invokes unpark with the current thread as the target; or</li>\n<li>Some other thread interrupts the current thread; or</li>\n<li>The call spuriously (that is, for no reason) returns.</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a java.util.concurrent.locks.AbstractQueuedSynchronizer#acquireQueued</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Acquires in exclusive uninterruptible mode for thread already in</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * queue. Used by condition wait methods as well as acquire.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @param node the node</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @param arg the acquire argument</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @return &#123;@code true&#125; if interrupted while waiting</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">acquireQueued</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Node</span> node<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">boolean</span> failed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">boolean</span> interrupted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">final</span> <span class=\"token class-name\">Node</span> p <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">predecessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> head <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">tryAcquire</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token function\">setHead</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                p<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// help GC</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                failed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">return</span> interrupted<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">shouldParkAfterFailedAcquire</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token function\">parkAndCheckInterrupt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                interrupted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>failed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token function\">cancelAcquire</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/07/29/semaphore/",
            "url": "https://limxtop1989.github.io/limxtop/2023/07/29/semaphore/",
            "title": "Semaphore",
            "date_published": "2023-07-29T09:03:58.000Z",
            "content_html": "<p>计数方式实现的旗语，一个旗语维护一组概念上的许可。每个线程 acquire 都会在必要时阻塞，直到有许可证可用，然后获取它，许可数量减一。每次释放都会增加一个许可，从而有可能释放阻塞在 acquire 的线程。不过， Semaphore 并不使用实际的许可对象；它只是对可用数量进行计数，并采取相应的行动。</p>\n<p>如此 Semaphores 通常用于限制可以访问某些（物理或逻辑）资源的线程数量。也就是说，当你希望只有 permits 个线程可以并发访问这些资源是，通过 Semaphore (int permits, boolean fair) 实例化 permits 个许可资源，线程 aquire 许可后，获取资源，完成后，release 释放许可回许可池。</p>\n<blockquote>\n<p>A counting semaphore. Conceptually, a semaphore maintains a set of permits. Each acquire blocks if necessary until a permit is available, and then takes it. Each release adds a permit, potentially releasing a blocking acquirer. However, no actual permit objects are used; the Semaphore just keeps a count of the number available and acts accordingly.<br />\nSemaphores are often used to restrict the number of threads than can access some (physical or logical) resource.</p>\n</blockquote>\n<p>在 aquire &amp; release 之前，没有同步锁被持有，</p>\n<blockquote>\n<p>Note that no synchronization lock is held when acquire is called as that would prevent an item from being returned to the pool. The semaphore encapsulates the synchronization needed to restrict access to the pool, separately from any synchronization needed to maintain the consistency of the pool itself.</p>\n</blockquote>\n<p>与 Lock 的实现不同， semaphore release permit 的线程，不需要以 aquire 该 permit 为前提。</p>\n<blockquote>\n<p>A semaphore initialized to one, and which is used such that it only has at most one permit available, can serve as a mutual exclusion lock. This is more commonly known as a binary semaphore, because it only has two states: one permit available, or zero permits available. When used in this way, the binary semaphore has the property (unlike many java.util.concurrent.locks.Lock implementations), that the &quot;lock&quot; can be released by a thread other than the owner (as semaphores have no notion of ownership). This can be useful in some specialized contexts, such as deadlock recovery.</p>\n</blockquote>\n",
            "tags": [
                "semaphore，java 并发，信号量"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/07/29/CountDownLatch/",
            "url": "https://limxtop1989.github.io/limxtop/2023/07/29/CountDownLatch/",
            "title": "CountDownLatch",
            "date_published": "2023-07-29T07:30:00.000Z",
            "content_html": "<h2 id=\"overview\"><a class=\"anchor\" href=\"#overview\">#</a> Overview</h2>\n<p>一种同步辅助工具，允许一个或多个线程等待其他线程正在执行的一组操作完成。</p>\n<blockquote>\n<p>A synchronization aid that allows one or more threads to wait until a set of operations being performed in other threads completes.</p>\n</blockquote>\n<p>CountDownLatch 以给定的计数初始化。await 方法会阻塞，直到当前计数因调用 CountDown 方法而归零，之后所有等待的线程都会被释放，并且 await 的任何后续调用都会立即返回。这是一种一次性现象 -- 计数无法重置。如果需要重置计数的版本，可以考虑使用 CyclicBarrier。</p>\n<blockquote>\n<p>A CountDownLatch is initialized with a given count. The await methods block until the current count reaches zero due to invocations of the countDown method, after which all waiting threads are released and any subsequent invocations of await return immediately. This is a one-shot phenomenon -- the count cannot be reset. If you need a version that resets the count, consider using a CyclicBarrier.<br />\nCountDownLatch 是一种多功能同步工具，可用于多种用途。初始化计数为 1 的 CountDownLatch 可用作简单的开 / 关锁存器或门：所有调用 await 的线程都在门上等待，直到调用 countDown 的线程打开它。初始化为 N 的 CountDownLatch 可用于让一个线程等待，直到 N 个线程完成某个操作，或某个操作完成 N 次。<br />\nA CountDownLatch is a versatile synchronization tool and can be used for a number of purposes. A CountDownLatch initialized with a count of one serves as a simple on/off latch, or gate: all threads invoking await wait at the gate until it is opened by a thread invoking countDown. A CountDownLatch initialized to N can be used to make one thread wait until N threads have completed some action, or some action has been completed N times.<br />\nCountDownLatch 的一个有用特性是，它并不要求调用 countDown 的线程在继续执行之前需要等待计数归零，也就是它调用 countDown 之后，可以继续一路高歌猛进，它只是阻止其他调用 await 的任何线程越过 await 继续执行，直到所有 await 的线程都能通过为止（即 countDown 为 0）。<br />\nA useful property of a CountDownLatch is that it doesn't require that threads calling countDown wait for the count to reach zero before proceeding, it simply prevents any thread from proceeding past an await until all threads could pass.</p>\n</blockquote>\n<p>Sample usage: Here is a pair of classes in which a group of worker threads use two countdown latches:<br />\nThe first is a start signal that prevents any worker from proceeding until the driver is ready for them to proceed;<br />\nThe second is a completion signal that allows the driver to wait until all workers have completed.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Driver</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token class-name\">CountDownLatch</span> startSignal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CountDownLatch</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token class-name\">CountDownLatch</span> doneSignal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CountDownLatch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">N</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token comment\">// create and start threads</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span>startSignal<span class=\"token punctuation\">,</span> doneSignal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     <span class=\"token function\">doSomethingElse1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// don't let run yet</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     startSignal<span class=\"token punctuation\">.</span><span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// let all threads proceed</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     <span class=\"token function\">doSomethingElse2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     doneSignal<span class=\"token punctuation\">.</span><span class=\"token function\">await</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// wait for all to finish</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Worker</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">CountDownLatch</span> startSignal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">CountDownLatch</span> doneSignal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CountDownLatch</span> startSignal<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CountDownLatch</span> doneSignal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>startSignal <span class=\"token operator\">=</span> startSignal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>doneSignal <span class=\"token operator\">=</span> doneSignal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>       startSignal<span class=\"token punctuation\">.</span><span class=\"token function\">await</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>       <span class=\"token function\">doWork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>       doneSignal<span class=\"token punctuation\">.</span><span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// return;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token keyword\">void</span> <span class=\"token function\">doWork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://s3.uuu.ovh/imgs/2023/07/30/47ebfd56d12f728c.png\" alt=\"\" /><br />\nWorkerThread 初始化启动后， 在  <code>startSignal.await();</code>  集结等待，driver 在 doSomethingElse1 后， startSignal.countDown (); 释放门闩，所有等待线程从等待态，进入就绪态，纷纷执行 doWork () 与此同时， Driver 执行 doneSignal.await () 等所有 WorkerThread 完成工作，都执行 doneSignal.countDown ();<br />\n 待计数器归零，Driver 线程从 await 中返回，从等待态进入就绪态，</p>\n<blockquote>\n<p>Another typical usage would be to divide a problem into N parts, describe each part with a Runnable that executes that portion and counts down on the latch, and queue all the Runnables to an Executor. When all sub-parts are complete, the coordinating thread will be able to pass through await. (When threads must repeatedly count down in this way, instead use a CyclicBarrier.)</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Driver2</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token class-name\">CountDownLatch</span> doneSignal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CountDownLatch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">N</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     <span class=\"token class-name\">Executor</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">N</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token comment\">// create and start threads</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       e<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WorkerRunnable</span><span class=\"token punctuation\">(</span>doneSignal<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     doneSignal<span class=\"token punctuation\">.</span><span class=\"token function\">await</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// wait for all to finish</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WorkerRunnable</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">CountDownLatch</span> doneSignal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token class-name\">WorkerRunnable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CountDownLatch</span> doneSignal<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>doneSignal <span class=\"token operator\">=</span> doneSignal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>       <span class=\"token function\">doWork</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>       doneSignal<span class=\"token punctuation\">.</span><span class=\"token function\">countDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// return;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token keyword\">void</span> <span class=\"token function\">doWork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>Memory consistency effects: Until the count reaches zero, actions in a thread prior to calling countDown() happen-before actions following a successful return from a corresponding await() in another thread.</p>\n</blockquote>\n",
            "tags": [
                "Java",
                "CountDownLatch, 并发，多线程"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/07/27/thread-pool/",
            "url": "https://limxtop1989.github.io/limxtop/2023/07/27/thread-pool/",
            "title": "线程池",
            "date_published": "2023-07-27T15:10:17.000Z",
            "content_html": "<p>本文的目的为掌握线程池的正确使用。如果英语水平不错，仅仅看类注释，半个小时就可以初步掌握如何正确使用了，但如果读懂源码相关的实现，则不仅可以辅助加深对注释描述的理解，也可以学习好的代码设计和实现。</p>\n<h1 id=\"overview\"><a class=\"anchor\" href=\"#overview\">#</a> Overview</h1>\n<p>An ExecutorService that executes each submitted task using one of possibly several pooled threads, normally configured using Executors factory methods.</p>\n<h2 id=\"core-and-maximum-pool-sizes\"><a class=\"anchor\" href=\"#core-and-maximum-pool-sizes\">#</a> Core and maximum pool sizes</h2>\n<ol>\n<li>在方法  <code>execute(Runnable)</code>  中提交新任务时，如果正在运行的线程少于  <code>corePoolSize</code> ，即使其他工作线程处于空闲状态，也会创建一个新线程来处理请求。</li>\n<li>线程数达到 <code>corePoolSize</code>  后，新来的任务进入队列，等待 core 线程处理。</li>\n<li>当队列满了以后，又有新任务提交，在 <code>corePoolSize</code>  外，继续创建新线程。</li>\n<li>当队列满 &amp; 线程数达到  <code>maximumPoolSize</code> ，提交的新任务走 Rejected tasks 流程。</li>\n</ol>\n<p>文字描述或许干枯难记，当阅读源码后，回来总结这些规则时，自己应该依据这些规则，就生产者线程（client）往线程池提交任务时，线程池如何分配任务给 core thread，任务队列，maximum thread，在脑海里构建一张动态序列图。这样可以更好的帮助理解和记忆。</p>\n<blockquote>\n<p>On-demand construction<br />\nBy default, even core threads are initially created and started only when new tasks arrive, but this can be overridden dynamically using method  <code>prestartCoreThread</code>  or  <code>prestartAllCoreThreads</code> . You probably want to prestart threads if you construct the pool with a non-empty queue.</p>\n</blockquote>\n<h2 id=\"keep-alive-times\"><a class=\"anchor\" href=\"#keep-alive-times\">#</a> Keep-alive times</h2>\n<p>超过 <code>corePoolSize</code>  的线程，当他们空闲时长超过  <code>getKeepAliveTime(TimeUnit)</code> ，会 terminate。通过 <code> allowCoreThreadTimeOut(boolean)</code>  可以设置这个超时策略适用于 core 线程。</p>\n<h2 id=\"queuing\"><a class=\"anchor\" href=\"#queuing\">#</a> Queuing</h2>\n<ol>\n<li>Direct handoffs：需要无边界的  <code>maximumPoolSizes</code> ，避免没有线程，导致新提交的任务被拒绝。</li>\n</ol>\n<blockquote>\n<p>Direct handoffs. A good default choice for a work queue is a SynchronousQueue that hands off tasks to threads without otherwise holding them. Here, an attempt to queue a task will fail if no threads are immediately available to run it, so a new thread will be constructed. This policy avoids lockups when handling sets of requests that might have internal dependencies. Direct handoffs generally require unbounded maximumPoolSizes to avoid rejection of new submitted tasks. This in turn admits the possibility of unbounded thread growth when commands continue to arrive on average faster than they can be processed.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Unbounded queues:  <code>LinkedBlockingQueue</code>  没有容量限制， <code>maximumPoolSize</code>  不会生效，适用于任务彼此独立。</li>\n</ol>\n<blockquote>\n<p>Unbounded queues. Using an unbounded queue (for example a LinkedBlockingQueue without a predefined capacity) will cause new tasks to wait in the queue when all corePoolSize threads are busy. Thus, no more than corePoolSize threads will ever be created. (And the value of the maximumPoolSize therefore doesn't have any effect.) This may be appropriate when each task is completely independent of others, so tasks cannot affect each others execution; for example, in a web page server. While this style of queuing can be useful in smoothing out transient bursts of requests, it admits the possibility of unbounded work queue growth when commands continue to arrive on average faster than they can be processed.</p>\n</blockquote>\n<ol start=\"3\">\n<li>Bounded queues：  <code> ArrayBlockingQueue</code>   是前两种策略的折衷，队列大小和最大线程数大小彼此折衷。</li>\n</ol>\n<blockquote>\n<p>Queue sizes and maximum pool sizes may be traded off for each other: Using large queues and small pools minimizes CPU usage, OS resources, and context-switching overhead, but can lead to artificially low throughput. If tasks frequently block (for example if they are I/O bound), a system may be able to schedule time for more threads than you otherwise allow. Use of small queues generally requires larger pool sizes, which keeps CPUs busier but may encounter unacceptable scheduling overhead, which also decreases throughput.</p>\n</blockquote>\n<h1 id=\"source-code\"><a class=\"anchor\" href=\"#source-code\">#</a> Source code</h1>\n<ol>\n<li>不要通篇顺序阅读，需要分层，跳过干扰次要代码，重点阅读想要懂的逻辑部分。由于我们现在是要读懂线程池是如何管理线程和任务的，所以，线程池的状态等代码都不必深入理解。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.ThreadPoolExecutor#execute</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>command <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NullPointerException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * Proceed in 3 steps:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     * 1. If fewer than corePoolSize threads are running, try to</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     * start a new thread with the given command as its first</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     * task.  The call to addWorker atomically checks runState and</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     * workerCount, and so prevents false alarms that would add</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     * threads when it shouldn't, by returning false.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     * 2. If a task can be successfully queued, then we still need</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     * to double-check whether we should have added a thread</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     * (because existing ones died since last checking) or that</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     * the pool shut down since entry into this method. So we</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     * recheck state and if necessary roll back the enqueuing if</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     * stopped, or start a new thread if there are none.</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     * 3. If we cannot queue task, then we try to add a new</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     * thread.  If it fails, we know we are shut down or saturated</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     * and so reject the task.</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">//case 1: 线程数少于 corePoolSize，新建 core 线程</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">workerCountOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> corePoolSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">addWorker</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        c <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">//case 2: 线程数已经到达 corePoolSize，加入队列处理</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> workQueue<span class=\"token punctuation\">.</span><span class=\"token function\">offer</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">int</span> recheck <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span>recheck<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">workerCountOf</span><span class=\"token punctuation\">(</span>recheck<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token function\">addWorker</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">//case 3: 队列满了，加入新任务失败，新建 (core, maximum] 区间的线程来处理</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">addWorker</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"case-1-addworkercommand-true\"><a class=\"anchor\" href=\"#case-1-addworkercommand-true\">#</a> Case 1:  addWorker(command, true)</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.ThreadPoolExecutor#addWorker</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">addWorker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> firstTask<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> core<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 状态判断，大概理解即可，并非重点 begin</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    retry<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> <span class=\"token function\">runStateOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// Check if queue empty only if necessary.</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">>=</span> SHUTDOWN <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token operator\">!</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">==</span> SHUTDOWN <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                firstTask <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token operator\">!</span> workQueue<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">int</span> wc <span class=\"token operator\">=</span> <span class=\"token function\">workerCountOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wc <span class=\"token operator\">>=</span> CAPACITY <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                wc <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span>core <span class=\"token operator\">?</span> corePoolSize <span class=\"token operator\">:</span> maximumPoolSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">compareAndIncrementWorkerCount</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">break</span> retry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            c <span class=\"token operator\">=</span> ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Re-read ctl</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">runStateOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> rs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">continue</span> retry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\">// else CAS failed due to workerCount change; retry inner loop</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// 状态判断，大概理解即可，并非重点 end</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">boolean</span> workerStarted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">boolean</span> workerAdded <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token class-name\">Worker</span> w <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\">// 新建一个 worker thread，并将第一个 task 传入</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        w <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span>firstTask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">final</span> <span class=\"token class-name\">Thread</span> t <span class=\"token operator\">=</span> w<span class=\"token punctuation\">.</span>thread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">final</span> <span class=\"token class-name\">ReentrantLock</span> mainLock <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mainLock<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            mainLock<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token comment\">// Recheck while holding lock.</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token comment\">// Back out on ThreadFactory failure or if</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token comment\">// shut down before lock acquired.</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">int</span> rs <span class=\"token operator\">=</span> <span class=\"token function\">runStateOf</span><span class=\"token punctuation\">(</span>ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">&lt;</span> SHUTDOWN <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                    <span class=\"token punctuation\">(</span>rs <span class=\"token operator\">==</span> SHUTDOWN <span class=\"token operator\">&amp;&amp;</span> firstTask <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// precheck that t is startable</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalThreadStateException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                    <span class=\"token comment\">// 将 worker 加入 worker 列表，他们循环从任务队列取任务执行</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                    workers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                    <span class=\"token keyword\">int</span> s <span class=\"token operator\">=</span> workers<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">></span> largestPoolSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                        largestPoolSize <span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                    workerAdded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                mainLock<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>workerAdded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token comment\">// 启动 worker thread，开始循环获取，执行任务</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                t<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                workerStarted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> workerStarted<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token function\">addWorkerFailed</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">return</span> workerStarted<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"new-worker\"><a class=\"anchor\" href=\"#new-worker\">#</a> new Worker</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a java.util.concurrent.ThreadPoolExecutor.Worker#Worker</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    * Creates with given first task and thread from ThreadFactory.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    * @param firstTask the first task (null if none)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> firstTask<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// inhibit interrupts until runWorker</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstTask <span class=\"token operator\">=</span> firstTask<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thread <span class=\"token operator\">=</span> <span class=\"token function\">getThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">newThread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>初始化 Worker 实例，其中实例化  <code>firstTask</code>  &amp;  <code>thread</code>  成员变量。Worker 实现  <code>Runnable</code>  interface，在初始化 thread 时，作为构造器参数传入，作为 Thread.target 的值。Worker 继承  <code>AbstractQueuedSynchronizer</code> ，这是 Java 并发包的核心类，使用 CAS 操作实现锁，将放在其他博文展开分析。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.ThreadPoolExecutor#ThreadPoolExecutor(int, int, long, TimeUnit, BlockingQueue<Runnable>)</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">ThreadPoolExecutor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> corePoolSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                            <span class=\"token keyword\">int</span> maximumPoolSize<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                            <span class=\"token keyword\">long</span> keepAliveTime<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                            <span class=\"token class-name\">TimeUnit</span> unit<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                            <span class=\"token class-name\">BlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">></span></span> workQueue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>corePoolSize<span class=\"token punctuation\">,</span> maximumPoolSize<span class=\"token punctuation\">,</span> keepAliveTime<span class=\"token punctuation\">,</span> unit<span class=\"token punctuation\">,</span> workQueue<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">defaultThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> defaultHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>ThreadPool 默认的 ThreadFactory 是 Executors.defaultThreadFactory ()，看下其 newThread 代码，便知 worker 实例是 Thread 的 target 了。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.Executors.DefaultThreadFactory#DefaultThreadFactory</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Thread</span> <span class=\"token function\">newThread</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">Thread</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                            namePrefix <span class=\"token operator\">+</span> threadNumber<span class=\"token punctuation\">.</span><span class=\"token function\">getAndIncrement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                            <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">isDaemon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        t<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">getPriority</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span>NORM_PRIORITY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        t<span class=\"token punctuation\">.</span><span class=\"token function\">setPriority</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span>NORM_PRIORITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>当 Thread start 后，Thread.run 会执行，target.run 也就是 Worker.run 会被调用。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.lang.Thread#Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long)</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ThreadGroup</span> g<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Runnable</span> target<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                    <span class=\"token keyword\">long</span> stackSize<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AccessControlContext</span> acc<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                    <span class=\"token keyword\">boolean</span> inheritThreadLocals<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// ignore irrelevant codes</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// ignore irrelevant codes</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        target<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"workersadd\"><a class=\"anchor\" href=\"#workersadd\">#</a> workers.add</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.ThreadPoolExecutor#workers</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Set containing all worker threads in pool. Accessed only when</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * holding mainLock.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Worker</span><span class=\"token punctuation\">></span></span> workers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Worker</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"tstart\"><a class=\"anchor\" href=\"#tstart\">#</a> t.start</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.ThreadPoolExecutor.Worker#run</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/** Delegates main run loop to outer runWorker  */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">runWorker</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>java.util.concurrent.ThreadPoolExecutor#runWorker</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runWorker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Worker</span> w<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">Thread</span> wt <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">Runnable</span> task <span class=\"token operator\">=</span> w<span class=\"token punctuation\">.</span>firstTask<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    w<span class=\"token punctuation\">.</span>firstTask <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    w<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// allow interrupts</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">boolean</span> completedAbruptly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\">// 初始化时的第一个任务先执行，后续都从任务队列获取任务执行</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>task <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>task <span class=\"token operator\">=</span> <span class=\"token function\">getTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            w<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// If pool is stopping, ensure thread is interrupted;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// if not, ensure thread is not interrupted.  This</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">// requires a recheck in second case to deal with</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// shutdownNow race while clearing interrupt</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">runStateAtLeast</span><span class=\"token punctuation\">(</span>ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> STOP<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    <span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">interrupted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token function\">runStateAtLeast</span><span class=\"token punctuation\">(</span>ctl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> STOP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token operator\">!</span>wt<span class=\"token punctuation\">.</span><span class=\"token function\">isInterrupted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                wt<span class=\"token punctuation\">.</span><span class=\"token function\">interrupt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token function\">beforeExecute</span><span class=\"token punctuation\">(</span>wt<span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token class-name\">Throwable</span> thrown <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    task<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">RuntimeException</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    thrown <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span> <span class=\"token keyword\">throw</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Error</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    thrown <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span> <span class=\"token keyword\">throw</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    thrown <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token function\">afterExecute</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">,</span> thrown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                task <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                w<span class=\"token punctuation\">.</span>completedTasks<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                w<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        completedAbruptly <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token function\">processWorkerExit</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> completedAbruptly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"case-2-workqueueoffercommand\"><a class=\"anchor\" href=\"#case-2-workqueueoffercommand\">#</a> Case 2: workQueue.offer(command)</h1>\n<p>将任务塞入队列，待线程池的线程轮询获取任务执行。队列有多种实现，主要区分 Array &amp; Link</p>\n<ol>\n<li>ArrayBlockingQueue 有固定边界，当任务加满后，workQueue.offer (command) 会返回 false，进入线程 (core, maximum] 扩张流程。</li>\n<li>LinkedBlockingQueue 默认没有边界，所以 workQueue.offer (command) 一般返回 true，即任务成功加入队列。除非初始化时，设置 capacity。</li>\n</ol>\n<h1 id=\"case-3-addworkercommand-false\"><a class=\"anchor\" href=\"#case-3-addworkercommand-false\">#</a> Case 3: addWorker(command, false)</h1>\n<p>与 addWorker (command, true) 类似，当线程数没到达 maximum 时，创建新线程，返回 true，否则不创建新线程，返回 false，当前任务交由  <code>RejectedExecutionHandler</code>  处理，进入 reject 流程。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a java.util.concurrent.ThreadPoolExecutor#addWorker</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">addWorker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> firstTask<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> core<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> wc <span class=\"token operator\">=</span> <span class=\"token function\">workerCountOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wc <span class=\"token operator\">>=</span> CAPACITY <span class=\"token operator\">||</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        wc <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span>core <span class=\"token operator\">?</span> corePoolSize <span class=\"token operator\">:</span> maximumPoolSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Java",
                "Thread Pool，线程池"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/07/08/Representing-and-Manipulating-Information/",
            "url": "https://limxtop1989.github.io/limxtop/2023/07/08/Representing-and-Manipulating-Information/",
            "title": "数字在计算机的表示和操作",
            "date_published": "2023-07-08T06:51:22.000Z",
            "content_html": "<h1 id=\"integer-representations\"><a class=\"anchor\" href=\"#integer-representations\">#</a> Integer Representations</h1>\n<p>在学校教科书告诉我们原码，反码，补码的规则来计算正负数在计算机的表示。</p>\n<blockquote>\n<p>原码：将一个整数，转换成二进制，就是其原码。<br />\n如单字节的 5 的原码为：0000 0101；-5 的原码为 1000 0101。<br />\n反码：正数的反码就是其原码；负数的反码是将原码中，除符号位以外，每一位取反。<br />\n如单字节的 5 的反码为：0000 0101；-5 的反码为 1111 1010。<br />\n补码：正数的补码就是其原码；负数的反码 + 1 就是补码。<br />\n如单字节的 5 的补码为：0000 0101；-5 的补码为 1111 1011。<br />\n在计算机中，正数是直接用原码表示的，如单字节 5，在计算机中就表示为：0000 0101。<br />\n负数用补码表示，如单字节 - 5，在计算机中表示为 1111 1011。</p>\n</blockquote>\n<p>规则不仅复杂抽象不说，也无助于我们理解无符号和有符号的转换，无符号与有符号的扩展。当我阅读 CSAPP Chapter 2 Representing and Manipulating Information，忽然如沐春风，豁然开朗。如下是部分笔记。</p>\n<h2 id=\"unsigned-and-twos-complement-encodings\"><a class=\"anchor\" href=\"#unsigned-and-twos-complement-encodings\">#</a> Unsigned and Two’s-Complement Encodings</h2>\n<p>Assume we have an integer data type of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span> bits. We write a bit vector as either <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.20772em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>, to denote the entire vector, or as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[x_{w-1}, x_{w-2}, ..., x_0 ]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> to denote the individual bits within the vector. Treating <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.20772em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>  as a number written in binary notation, we obtain the unsigned interpretation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.20772em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>. We express this interpretation as a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mn>2</mn><msub><mi>U</mi><mi>w</mi></msub></mrow><annotation encoding=\"application/x-tex\">B2U_w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (for “binary to unsigned”, length <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span>)</p>\n\\begin{equation}\nB2U_w(\\vec{x}) = \\sum_{i = 0}^{w-1} x_i 2^i\n\\end{equation}\n\n<p>We wish to represent negative values as well by two’s-complement form. This is defined by interpreting the most significant bit of the word to have negative weight. We express this interpretation as a function <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub></mrow><annotation encoding=\"application/x-tex\">B2T_w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>(for “binary to two’s-complement” length <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi></mrow><annotation encoding=\"application/x-tex\">\\omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span></span></span></span> \t)</p>\n\\begin{equation}\nB2T_w(\\vec{x}) = -x_{w - 1} 2^{w-1} +  \\sum_{i = 0}^{w-2} x_i 2^i\n\\end{equation}\n\n<p>Problem: find the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mo>−</mo><mn>5</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">B2T_w(-5)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">5</span><span class=\"mclose\">)</span></span></span></span></p>\n\\begin{align}\n\\because {5 + -5 = 0} \\\\\n0000 \\space 0101 + 1\\space\\underbrace{\\vec{x_6, x_5, ..., x_0}}_\\text{x} = 0 \\\\\n\\underbrace{\\vec{x_6, x_5, ..., x_0}}_\\text{x} = 1000 \\space 000 - 0000 \\space 0101 \\\\\n\\underbrace{\\vec{x_6, x_5, ..., x_0}}_\\text{x} = 0111 \\space 1011\\\\\n\\therefore {B2T_w(-5) = 1111 \\space 1011}\n\\end{align}\n\n<h3 id=\"conversions-between-singed-and-unsigned\"><a class=\"anchor\" href=\"#conversions-between-singed-and-unsigned\">#</a> Conversions Between Singed and Unsigned</h3>\n\\begin{gather}\nU2B_w(x) = B2U_w^{-1}(x) \\\\\nT2B_w(x) = B2T_w^{-1}(x)\n\\end{gather}\n\n<p>These functions give the unsigned or two’s-complement bit patterns for a numeric value. Consider the function</p>\n\\begin{gather}\nU2T_w(x) = B2T_w(U2B_w(x))\n\\end{gather}\n\n<p>which takes a number between 0 and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2^w - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.747722em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> and yields a number between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mo>−</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator=\"true\">,</mo><mtext> </mtext><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[-2^{w - 1},\\space 2^{w - 1}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>, where the two numbers have identical bit representations, except that the argument is unsigned, while the result has a two’s-complement representation. Conversely, the function</p>\n\\begin{gather}\nT2U_w(x) = B2U_w(T2B_w(x))\n\\end{gather}\n\n<p>yields the unsigned number having the same bit representation as the two’s-complement value of x.</p>\n<p>To get a better understanding of the relation between a signed number <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> and its unsigned counterpart <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mn>2</mn><msub><mi>U</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T2U_w(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>, we can use the fact that they have identical bit representations to derive a numerical relationship.</p>\n\\begin{align}\nB2U_w(\\vec{x}) - B2T_w(\\vec{x}) = x_{w-1}(2^{w-1} - - 2^{w-1}) = x_{w-1}2^w \\\\\n\\end{align}\n\n<p>This gives a relationship <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle mathcolor=\"red\"><mi>B</mi><mn>2</mn><msub><mi>U</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mn>2</mn><mi>w</mi></msup><mo>+</mo><mi>B</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo></mstyle></mrow><annotation encoding=\"application/x-tex\">\\textcolor{red}{B2U_w(\\vec{x}) = x_{w-1}2^w + B2T_w(\\vec{x})}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;color:red;\">B</span><span class=\"mord\" style=\"color:red;\">2</span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;color:red;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;color:red;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\" style=\"color:red;\">(</span><span class=\"mord accent\" style=\"color:red;\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathnormal\" style=\"color:red;\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.20772em;\"><span class=\"overlay\" style=\"color:red;height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\" style=\"color:red;\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\" style=\"color:red;\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8727229999999999em;vertical-align:-0.208331em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathnormal\" style=\"color:red;\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mtight\" style=\"color:red;\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;color:red;\">w</span><span class=\"mbin mtight\" style=\"color:red;\">−</span><span class=\"mord mtight\" style=\"color:red;\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord\" style=\"color:red;\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;color:red;\">w</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\" style=\"color:red;\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;color:red;\">B</span><span class=\"mord\" style=\"color:red;\">2</span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;color:red;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:red;\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;color:red;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\" style=\"color:red;\">(</span><span class=\"mord accent\" style=\"color:red;\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"color:red;\"><span class=\"mord mathnormal\" style=\"color:red;\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.20772em;\"><span class=\"overlay\" style=\"color:red;height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\" style=\"color:red;\">)</span></span></span></span>. If we let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>B</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x = B2T_w(\\vec{x})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.20772em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>, we then have</p>\n\\begin{equation}\nB2U_w(T2B_w(x)) = T2U_w(x) = x_{w-1}2^w + x\n\\end{equation}\n\n<p>This relationship is useful for proving relationships between unsigned and two’s-complement arithmetic. In the two’s-complement representation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>, bit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">x_{w-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> determines whether or not <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is negative, giving</p>\n\\begin{equation}\nT2U_w(x) = \n\\begin{cases}\nx + 2^w, & x \\lt 0\\\\\nx, & x \\ge 0\n\\end{cases}\n\\end{equation}\n\n<p><img data-src=\"https://pic.imgdb.cn/item/64a90fd21ddac507ccc20279.png\" alt=\"\" /><br />\nGoing in the other direction, we wish to derive the relationship between an unsigned number <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> and its signed counterpart <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">U2T_w(x).</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord\">.</span></span></span></span> If we let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>B</mi><mn>2</mn><msub><mi>U</mi><mi>x</mi></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x = B2U_x(\\vec{x})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.20772em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> , then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>=</mo><mi>U</mi><mn>2</mn><mi>B</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\vec{x} = U2B(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.20772em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> we have</p>\n\\begin{equation}\nB2T_w(U2B_w(x)) = U2T_w(x) = -x_{w-1}2^w + x\n\\end{equation}\n\n<p>In the unsigned representation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>, bit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">x_{w-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> determines whether or not <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is greater than or equal to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">2^{w-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span>, giving</p>\n\\begin{equation}\nU2T_w(x) = \n\\begin{cases}\nx, & x \\lt 2^{w-1}\\\\\nx - 2^w, & x \\ge 2^{w-1}\n\\end{cases}\n\\end{equation}\n\n<p><img data-src=\"https://pic.imgdb.cn/item/64a90fd11ddac507ccc20139.png\" alt=\"\" /></p>\n<h2 id=\"225-expanding-the-bit-representation-of-a-number\"><a class=\"anchor\" href=\"#225-expanding-the-bit-representation-of-a-number\">#</a> 2.2.5 Expanding the Bit Representation of a Number</h2>\n<p>zero extension: To convert an unsigned number to a larger data type, we simply add leading 0s to the representation.</p>\n<p>sign extension: To convert an signed(two’s-complement) number to a larger data type, , add leading most significant bit to the representation.</p>\n\\begin{align}\nB2T_{w+1}([x_{w-1}, x_{w-1}, x_{w-2},...x_0]) &= -x_{w-1}2^w + [\\sum_0^{w-1}x_i2^i] \\\\\n&=  -x_{w-1}2^w + x_{w-1}2^{w-1}  +[\\sum_0^{w-2}x_i2^i] \\\\\n& = -x_{w-1}2^{w-1}  +[\\sum_0^{w-2}x_i2^i] \\\\\n& = B2T_w([x_{w-1},x_{w-2},...x_0]\n\\end{align}\n\n<h2 id=\"truncating-numbers\"><a class=\"anchor\" href=\"#truncating-numbers\">#</a> Truncating Numbers</h2>\n\\begin{align}\nB2U_w([x_{w-1}, x_{w-2},...x_0]) \\space mod \\space  2^k &= [\\sum_0^{w-1}x_i2^i]\\space mod\\space  2^k \\\\\n&= [\\sum_0^{k-1}x_i2^i] \\space mod \\space 2^k \\\\\n& = [\\sum_0^{k-1}x_i2^i] \\\\\n& = B2U_w([x_{k-1},x_{k-2},...x_0]\n\\end{align}\n\n<h3 id=\"241-fractional-binary-numbers\"><a class=\"anchor\" href=\"#241-fractional-binary-numbers\">#</a> 2.4.1 Fractional Binary Numbers</h3>\n<p>Fractional binary notation:</p>\n\\begin{equation}\nb = b_mb_{m-1}...b_1b_0.b_{-1}...b_{-n} = \\sum_{i=-n}^mi^i * b_i\n\\end{equation}\n\n<p>This notation is not efficient for representing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5</mn><mo>∗</mo><msup><mn>2</mn><mn>100</mn></msup></mrow><annotation encoding=\"application/x-tex\">5 * 2^{100}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span></span>, which would consist of the bit pattern 101 followed by 100 zeros. Instead, we would like to represent numbers in a form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∗</mo><msup><mn>2</mn><mi>y</mi></msup></mrow><annotation encoding=\"application/x-tex\">x * 2^y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.664392em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span></span></span></span></span></span></span> by giving the values of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>.</p>\n<p>The IEEEE floating-point standard represents a number in a form <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>s</mi></msup><mo>∗</mo><mi>M</mi><mo>∗</mo><msup><mn>2</mn><mi>E</mi></msup></mrow><annotation encoding=\"application/x-tex\">v = (-1)^s * M * 2^E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>The sign s determines whether the number is negative ( s = 1) or positive (s = 0).</li>\n<li>The significant M is a fractional binary number that ranges either between 1 and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>−</mo><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">2 - \\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span> or between 0 and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>−</mo><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">1 - \\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></li>\n<li>The exponent E weights the value by a (possibly negative ) power of 2.</li>\n</ul>\n<p>The bit representation of a floating-point number is divided into three fields to encode these values:</p>\n<ul>\n<li>The single sign bit s directly encodes the sign s.</li>\n<li>The k-bit exponent field <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mo>=</mo><msub><mn>3</mn><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>e</mi><mn>1</mn></msub><msub><mi>e</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">exp = 3_{k-1}...e_1e_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.852771em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> encodes the exponent E.</li>\n<li>The n-bit fraction field <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mo>=</mo><msub><mi>f</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>f</mi><mn>1</mn></msub><msub><mi>f</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">frac = f_{n - 1}...f_1f_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> encodes the significant M.</li>\n</ul>\n<p>Normalized Values</p>\n<p>The bit pattern of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">exp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span></span></span></span> is neither all 0s nor all 1s. The exponent value is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>=</mo><mi>e</mi><mo>−</mo><mi>B</mi><mi>i</mi><mi>a</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">E = e - Bias</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span> is the unsigned number having bit representation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mo>=</mo><msub><mi>e</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>e</mi><mn>1</mn></msub><msub><mi>e</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">e = e_{k-1}...e_1e_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, and Bias is a bias value <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>=</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">bias = 2^{k - 1} - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9324379999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mn>1</mn><mo>+</mo><mn>0.</mn><msub><mi>f</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>f</mi><mn>1</mn></msub><msub><mi>f</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">M = 1 + 0.f_{n-1}...f_1f_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>Denormalized Values</p>\n<p>When the exponent field is all 0s.</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>=</mo><mn>1</mn><mo>−</mo><mi>B</mi><mi>i</mi><mi>a</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">E = 1 - Bias</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>=</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">M = f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span></li>\n</ul>\n<p>Special Values</p>\n<ul>\n<li>Infinity: When the exponent field is all 1s and the fraction field is all 0s.</li>\n<li>NaN: When the exponent field is all 1s but the fraction field is nonzero.</li>\n</ul>\n<p>Problem 2.33: k = 2, n = 2,  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>=</mo><msup><mn>2</mn><mrow><mn>2</mn><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">bias = 2^{2 - 1} -1 = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<table>\n<thead>\n<tr>\n<th>Bits</th>\n<th>e</th>\n<th>E</th>\n<th>f</th>\n<th>M</th>\n<th>V</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0 00 00</td>\n<td>0</td>\n<td>0 ( 1 - bias)</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0 00 01</td>\n<td>0</td>\n<td>0 ( 1 - bias)</td>\n<td>1/4</td>\n<td>1/4</td>\n<td>1/4</td>\n</tr>\n<tr>\n<td>0 00 10</td>\n<td>0</td>\n<td>0 ( 1 - bias)</td>\n<td>2/4</td>\n<td>2/4</td>\n<td>2/4</td>\n</tr>\n<tr>\n<td>0 00 11</td>\n<td>0</td>\n<td>0 ( 1 - bias)</td>\n<td>3/4</td>\n<td>3/4</td>\n<td>3/4</td>\n</tr>\n<tr>\n<td>0 01 00</td>\n<td>1</td>\n<td>0 ( e - bias)</td>\n<td>0</td>\n<td>4/4</td>\n<td>4/4</td>\n</tr>\n<tr>\n<td>0 01 01</td>\n<td>1</td>\n<td>0</td>\n<td>1/4</td>\n<td>5/4</td>\n<td>5/4</td>\n</tr>\n<tr>\n<td>0 01 10</td>\n<td>1</td>\n<td>0</td>\n<td>2/4</td>\n<td>6/4</td>\n<td>6/4</td>\n</tr>\n<tr>\n<td>0 01 11</td>\n<td>1</td>\n<td>0</td>\n<td>3/4</td>\n<td>7/4</td>\n<td>7/4</td>\n</tr>\n<tr>\n<td>0 10 00</td>\n<td>2</td>\n<td>1</td>\n<td>0</td>\n<td>4/4</td>\n<td>8/4</td>\n</tr>\n<tr>\n<td>0 10 01</td>\n<td>2</td>\n<td>1</td>\n<td>1/4</td>\n<td>5/4</td>\n<td>10/4</td>\n</tr>\n<tr>\n<td>0 10 10</td>\n<td>2</td>\n<td>1</td>\n<td>2/4</td>\n<td>6/4</td>\n<td>12/4</td>\n</tr>\n<tr>\n<td>0 10 11</td>\n<td>2</td>\n<td>1</td>\n<td>3/4</td>\n<td>7/4</td>\n<td>14/4</td>\n</tr>\n<tr>\n<td>0 11 00</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">+\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">∞</span></span></span></span></td>\n</tr>\n<tr>\n<td>0 11 01</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>NaN</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": []
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/05/07/word-card-user-manual/",
            "url": "https://limxtop1989.github.io/limxtop/2023/05/07/word-card-user-manual/",
            "title": "Android 单词卡片使用手册",
            "date_published": "2023-05-07T08:05:05.000Z",
            "content_html": "<h1 id=\"目录\"><a class=\"anchor\" href=\"#目录\">#</a> 目录</h1>\n<ol>\n<li>单词卡片效果图</li>\n<li>Android  单词卡片应用下载</li>\n<li>下载安装 GoldenDict 应用</li>\n<li>下载词库文件并放置在 GoldenDict 目录</li>\n</ol>\n<h1 id=\"单词卡片效果图\"><a class=\"anchor\" href=\"#单词卡片效果图\">#</a> 单词卡片效果图</h1>\n<p><img data-src=\"https://pic1.imgdb.cn/item/646de6540d2dde57771ab200.gif\" alt=\"\" /><br />\n使用艾宾浩斯遗忘曲线调度记忆任务。对于不懂的单词，可以点击搜索框，弹窗显示词典，目前提供朗文英英，牛津英汉等词典，丰富的释义，词源，例句和朗读例句，在丰富的链接下，让学习者掌握它的含义，用法和并训练听力，读～～写～～听说，雨露均沾。私以为，单纯记忆一个单词背后的汉语意思，只能知道它的含义，无法掌握它的用法，更不会听说。我们国人的哑巴英语就是这样学成的。关于我们很多国人没能掌握英语听说能力的根源及其有效学习掌握英语的方法，在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXdhdGVycy5tZS9saW14dG9wLzIwMjEvMDgvMTgvRW5nbGlzaC1pbnRyb2R1Y3Rpb24v\">英语自学指南</span>详细解释叙述，欢迎阅读。</p>\n<h1 id=\"使用示例\"><a class=\"anchor\" href=\"#使用示例\">#</a> 使用示例</h1>\n<p>比方说，dish 是个初级词汇，我们很早就知道，它是盘子的意思，恐怕我们很多人也仅知道如此，但这对于我们语言表达还是词穷的。所以就算单词我们已经学过了，依然需要按照科学的方式重新学习。GoldenDict 一查，好家伙，居然还有这么名词意思。（后面的汉字是为了表达清晰，具体学习，千万别去想中文含义，原则依然是用英语学习英语，看到 dish，不应该想到盘子，而是图画，或者英文释义或者例句，如果可以自己造句就更棒了）</p>\n<p>dish<br />\na flat container with low sides, for serving food from or cooking food in ⇨ bowl:<br />\n<img data-src=\"https://s3.uuu.ovh/imgs/2023/06/07/327fabf5e4a1a030.png\" alt=\"\" /></p>\n<ul>\n<li>a big dish of curry (量词，一盘菜）</li>\n<li>wash, dry put away, etc the dishes (泛指餐具，不仅是盘子了）</li>\n<li>a restaurant specializing in Indonesian dishes (风味）</li>\n<li>This soup is substantial enough to serve as a main dish (主菜）</li>\n<li>Mary's new boy-friend's quite a dish, isn't he? （帅气）</li>\n</ul>\n<p>还可以当动词用，想不到吧。</p>\n<ul>\n<li>The scandal dished his hope of being elected. (使破灭）</li>\n<li>Don't get into a fight with him: he can really dish it out. (attack sb fiercely with words or blows)</li>\n<li>There were students dishing out leaflets to passers-by.</li>\n<li>Could you dish up the fruits?</li>\n</ul>\n<p>看下相关的词汇。</p>\n<ul>\n<li>dishful: About as much as a dish will hold.</li>\n<li>dishy: physically attractive, or handsome.</li>\n<li>dishcloth: Cloth for washing dish.</li>\n<li>dishwasher: Machine or person that washes dishes.</li>\n<li>dish-water: Water used for washing dishes. (Her coffee tastes like dish-water)</li>\n</ul>\n<p>相似词</p>\n<ul>\n<li>food noun [uncountable and countable] things that people and animals eat: You can buy good fresh food in the market. | Do you like Japanese food?</li>\n<li>dish noun [countable] a type of food that is cooked in a particular way: a traditional English dish | They also offer vegetarian dishes.</li>\n<li>speciality British English, specialty American English noun [countable] a type of food that a restaurant or place is famous for: Fish dishes are a specialty of the region. | Home made pies are one of the hotel’s specialities.</li>\n<li>delicacy noun [countable] an unusual food which people in a particular place like to eat: The local delicacies include laverbread (boiled seaweed). | I was keen to try out the local delicacies.</li>\n<li>diet noun [countable] the type of food that someone usually eats: You shouldn’t have too much salt in your diet. | In the Andes, the main diet is beans, potatoes, and corn.</li>\n<li>cooking noun [uncountable] food made in a particular way, or by a particular person: Herbs are used a lot in French cooking. | I love my Mum’s home cooking.</li>\n<li>cuisine /kwɪˈziːn/ noun [countable] formal the food you can eat in a particular restaurant, country, or area: Italian cuisine | Trying the local cuisine is all part of the fun of travelling.</li>\n<li>nutrition noun [uncountable] food considered as something that is necessary for good health and growth: a book on nutrition | Many homeless people suffer from poor nutrition.</li>\n<li>nourishment /ˈnʌrɪʃmənt $ ˈnɜː-, ˈnʌ-/ noun [uncountable] goodness that you get from food, which helps your body to stay healthy: There's not much nourishment in fast food.</li>\n<li>fare noun [uncountable] formal the kind of food that is served in a place – used especially when saying how interesting it is: In China you can feast on bird’s nest soup and other exotic fare. | Dinner was pretty standard fare (=the usual kind of food).</li>\n</ul>\n<p>还有哦，再把情景下有关联的有用词汇照此学一遍。<br />\n<img data-src=\"https://s3.uuu.ovh/imgs/2023/06/03/86537a7659d0f73c.bmp\" alt=\"\" /></p>\n<p><img data-src=\"https://s3.uuu.ovh/imgs/2023/06/03/278784343549929c.bmp\" alt=\"\" /><br />\n天哪噜了。就一个小学词汇，把我一个大学毕业多年的人，一天学习词汇的时间额度给用光了，感觉收获满满呢。</p>\n<h1 id=\"单词卡片下载\"><a class=\"anchor\" href=\"#单词卡片下载\">#</a> 单词卡片下载</h1>\n<p>下载地址： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGd5ZXIuY29tL21nQmZ1Ng==\">https://www.pgyer.com/mgBfu6</span></p>\n<h1 id=\"下载安装goldendict\"><a class=\"anchor\" href=\"#下载安装goldendict\">#</a> 下载安装 GoldenDict</h1>\n<p>选择以下可用方案下载安装即可</p>\n<ol>\n<li>下载链接： <span class=\"exturl\" data-url=\"aHR0cDovL21hcmtldC5hbmRyb2lkLmNvbS9kZXRhaWxzP2lkPW1vYmkuZ29sZGVuZGljdC5hbmRyb2lkLmZyZWU=\">http://market.android.com/details?id=mobi.goldendict.android.free</span></li>\n<li>如果用浏览器无法下载安装 GoldenDict，自行打开 Android 手机自带的应用市场，搜素 GoldenDict，如果这里搜索的到，下载安装亦可。</li>\n</ol>\n<p>第一次启动会提示安装词库（如下图），并在 Android 手机存储器根目录创建 GoldenDict 目录（即文件夹）<br />\n<img data-src=\"https://s3.uuu.ovh/imgs/2023/05/07/41790adbafc47528.png\" width=\"30%\" height = \"30%\"></p>\n<h1 id=\"下载词库文件并放置在手机存储器根目录下的goldendict\"><a class=\"anchor\" href=\"#下载词库文件并放置在手机存储器根目录下的goldendict\">#</a> 下载词库文件，并放置在手机存储器根目录下的 GoldenDict</h1>\n<p>下载链接: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMW9WNkF4UlVsWDFjN21wRTM1MmJ0OHc=\">https://pan.baidu.com/s/1oV6AxRUlX1c7mpE352bt8w</span> 提取码: uxtw</p>\n<ol>\n<li>Android 手机下载以下词库文件即可，下载完毕<strong>解压</strong>（注意⚠️，必须解压），并放到手机存储器的 GoldenDict 目录。具体操作步骤可参考下一节，或者自行 Google 百度。</li>\n</ol>\n<ul>\n<li>En-En_Longman_DOCE5</li>\n<li>En-En_Merriam_Webster11</li>\n<li>En-En_OALD8</li>\n<li>Oxford_Advanced_Learner_English-Chinese_Dictionary-4th.bgl</li>\n</ul>\n<p>作为参考和对照，这个是我 Android Pixel 手机 File 应用打开的 GoldenDict 目录截图<br />\n<img data-src=\"https://s3.uuu.ovh/imgs/2023/05/07/367486e3a757df2e.png\" width=\"30%\" height = \"30%\"></p>\n<ol start=\"2\">\n<li>重新启动 GoldenDict，开始索引词库。完毕后可以在搜索框输入单词查询。<br />\n<img data-src=\"https://s3.uuu.ovh/imgs/2023/05/07/969c769bb87bb2ba.png\" width=\"30%\" height = \"30%\"></li>\n</ol>\n<h1 id=\"电脑手机文件传输\"><a class=\"anchor\" href=\"#电脑手机文件传输\">#</a> 电脑手机文件传输</h1>\n<h2 id=\"windows-计算机\"><a class=\"anchor\" href=\"#windows-计算机\">#</a> Windows 计算机</h2>\n<ol>\n<li>解锁手机。</li>\n<li>使用 USB 数据线将手机连接到计算机。</li>\n<li>在手机上，点按 “正在通过 USB 为此设备充电” 通知。</li>\n<li>在 “USB 的用途” 下，选择文件传输。</li>\n<li>计算机上将打开一个文件传输窗口。请使用该窗口拖动文件。</li>\n<li>完成后，从 Windows 中弹出您的手机。</li>\n<li>拔下 USB 数据线。</li>\n</ol>\n<h2 id=\"mac-计算机\"><a class=\"anchor\" href=\"#mac-计算机\">#</a> Mac 计算机</h2>\n<ol>\n<li>在您的计算机上下载并安装 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hbmRyb2lkLmNvbS9maWxldHJhbnNmZXIv\">Android 文件传输</span>。</li>\n<li>打开 Android 文件传输。在您下次连接手机时，该应用会自动打开。</li>\n<li>解锁手机。</li>\n<li>使用 USB 数据线将手机连接到计算机。</li>\n<li>在手机上，点按 “正在通过 USB 为此设备充电” 通知。</li>\n<li>在 “USB 的用途” 下，选择文件传输。</li>\n<li>计算机上将打开一个 Android 文件传输窗口。请使用该窗口拖动文件。</li>\n<li>完成后，拔下 USB 数据线。</li>\n</ol>\n<h1 id=\"最后\"><a class=\"anchor\" href=\"#最后\">#</a> 最后</h1>\n<p>应用图标由久未联系的足球队友余朝阳协助制作，在此特别鸣谢。设计理念由我匆忙提出，雪花和荧光元素寓意囊萤映雪，而 hello word 则与程序员学新语言写的第一个程序输出的传统文化一脉相承，希望大家可以坚持轻松愉悦学习，最后轻松驾驭英语。</p>\n<p>如果有遇到任何问题，特别是下载词库文件并放置在手机存储器指定目录这个步骤。欢迎留下评论或者给我邮件 <span class=\"exturl\" data-url=\"bWFpbHRvOmxpbXh0b3BAZ21haWwuY29t\">limxtop@gmail.com</span> ，我会尽力协助。</p>\n",
            "tags": [
                "单词卡片, word card"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/03/11/canvas-graphic-transform/",
            "url": "https://limxtop1989.github.io/limxtop/2023/03/11/canvas-graphic-transform/",
            "title": "Android 双指触控 位移 缩放 旋转",
            "date_published": "2023-03-11T13:13:48.000Z",
            "content_html": "<h1 id=\"效果\"><a class=\"anchor\" href=\"#效果\">#</a> 效果</h1>\n<p><img data-src=\"https://pic.imgdb.cn/item/6410989cebf10e5d53bddfb4.gif\" alt=\"demo\" /></p>\n<h1 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h1>\n<figure class=\"highlight kotlin\"><figcaption data-lang=\"kotlin\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>opengl</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> android<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>Context</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> android<span class=\"token punctuation\">.</span>graphics<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> android<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">.</span>MotionEvent</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> android<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">.</span>View</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>opengl<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>Constants</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> com<span class=\"token punctuation\">.</span>maxim<span class=\"token punctuation\">.</span>opengl<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>VLog</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> kotlin<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span>acos</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> kotlin<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span>asin</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> kotlin<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span>sqrt</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token function\">TouchEventView</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> Context<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">View</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> rect<span class=\"token operator\">:</span> RectF <span class=\"token operator\">=</span> <span class=\"token function\">RectF</span><span class=\"token punctuation\">(</span><span class=\"token number\">0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> desRect <span class=\"token operator\">=</span> <span class=\"token function\">RectF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> matrixST <span class=\"token operator\">=</span> <span class=\"token function\">Matrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> paint<span class=\"token operator\">:</span> Paint <span class=\"token operator\">=</span> <span class=\"token function\">Paint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">init</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        paint<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> Color<span class=\"token punctuation\">.</span>RED</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> downX<span class=\"token operator\">:</span> Float <span class=\"token operator\">=</span> <span class=\"token number\">0f</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> downY<span class=\"token operator\">:</span> Float <span class=\"token operator\">=</span> <span class=\"token number\">0f</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> downPointerX<span class=\"token operator\">:</span> Float <span class=\"token operator\">=</span> <span class=\"token number\">0f</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> downPointerY<span class=\"token operator\">:</span> Float <span class=\"token operator\">=</span> <span class=\"token number\">0f</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> dx<span class=\"token operator\">:</span> Float <span class=\"token operator\">=</span> <span class=\"token number\">0f</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> dy<span class=\"token operator\">:</span> Float <span class=\"token operator\">=</span> <span class=\"token number\">0f</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> scale<span class=\"token operator\">:</span> Float <span class=\"token operator\">=</span> <span class=\"token number\">1f</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> angle<span class=\"token operator\">:</span> Float <span class=\"token operator\">=</span> <span class=\"token number\">0f</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> MotionEvent<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Boolean <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">when</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>actionMasked<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            MotionEvent<span class=\"token punctuation\">.</span>ACTION_DOWN <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                downX <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                downY <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            MotionEvent<span class=\"token punctuation\">.</span>ACTION_POINTER_DOWN <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                downX <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                downY <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                downPointerX <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                downPointerY <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            MotionEvent<span class=\"token punctuation\">.</span>ACTION_MOVE <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pointerCount <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                    <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                    <span class=\"token function\">zoom</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            MotionEvent<span class=\"token punctuation\">.</span>ACTION_POINTER_UP <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">val</span> remainIndex <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>actionIndex <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                downX <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span>remainIndex<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> dx</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                downY <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span>remainIndex<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> dy</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            MotionEvent<span class=\"token punctuation\">.</span>ACTION_UP<span class=\"token punctuation\">,</span> MotionEvent<span class=\"token punctuation\">.</span>ACTION_CANCEL <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                <span class=\"token comment\">// NOP.</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                <span class=\"token comment\">// NOP.</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> MotionEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        dx <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> downX</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        dy <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> downY</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">zoom</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> MotionEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">val</span> prev <span class=\"token operator\">=</span> <span class=\"token function\">distance</span><span class=\"token punctuation\">(</span>downX<span class=\"token punctuation\">,</span> downY<span class=\"token punctuation\">,</span> downPointerX<span class=\"token punctuation\">,</span> downPointerY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">val</span> next <span class=\"token operator\">=</span> <span class=\"token function\">distance</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        scale <span class=\"token operator\">=</span> next <span class=\"token operator\">/</span> prev</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> MotionEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token keyword\">val</span> pointerX <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">val</span> pointerY <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token comment\">// multiply y component by -1 to make y-axis points up.</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token comment\">// which maps view coordinate system to right-hand coordinate system.</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">val</span> prevVector <span class=\"token operator\">=</span> <span class=\"token function\">Vector</span><span class=\"token punctuation\">(</span>downPointerX <span class=\"token operator\">-</span> downX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>downPointerY <span class=\"token operator\">-</span> downY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">val</span> nextVector <span class=\"token operator\">=</span> <span class=\"token function\">Vector</span><span class=\"token punctuation\">(</span>pointerX <span class=\"token operator\">-</span> event<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>pointerY <span class=\"token operator\">-</span> event<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token keyword\">val</span> cp<span class=\"token operator\">:</span> Vector <span class=\"token operator\">=</span> prevVector<span class=\"token punctuation\">.</span><span class=\"token function\">crossProduct</span><span class=\"token punctuation\">(</span>nextVector<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token comment\">// direction is 1 if the angle the next vector rotates with clockwise direction by</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token comment\">// from previous vector locates at [0, PI], otherwise is -1 if locates at [PI , 2 PI]</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">val</span> direction <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cp<span class=\"token punctuation\">.</span>z <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> Rotate<span class=\"token punctuation\">.</span>CLOCKWISE<span class=\"token punctuation\">.</span>direction  <span class=\"token keyword\">else</span> Rotate<span class=\"token punctuation\">.</span>COUNTER_CLOCKWISE<span class=\"token punctuation\">.</span>direction</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token comment\">// radian represent the angle between the two vectors, whose value locates in [0, PI] always.</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">val</span> radian <span class=\"token operator\">=</span> <span class=\"token function\">acos</span><span class=\"token punctuation\">(</span>prevVector<span class=\"token punctuation\">.</span><span class=\"token function\">dotProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>nextVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>prevVector<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> nextVector<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        angle <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>radian <span class=\"token operator\">*</span> <span class=\"token number\">180</span> <span class=\"token operator\">/</span> Math<span class=\"token punctuation\">.</span>PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFloat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> direction</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        VLog<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token interpolation variable\">$cp</span>, <span class=\"token interpolation variable\">$radian</span>, <span class=\"token interpolation variable\">$angle</span>\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">distance</span><span class=\"token punctuation\">(</span>x1<span class=\"token operator\">:</span> Float<span class=\"token punctuation\">,</span> y1<span class=\"token operator\">:</span> Float<span class=\"token punctuation\">,</span> x2<span class=\"token operator\">:</span> Float<span class=\"token punctuation\">,</span> y2<span class=\"token operator\">:</span> Float<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Float <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token keyword\">val</span> deltaX <span class=\"token operator\">=</span> x1 <span class=\"token operator\">-</span> x2</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token keyword\">val</span> deltaY <span class=\"token operator\">=</span> y1 <span class=\"token operator\">-</span> y2</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>deltaX <span class=\"token operator\">*</span> deltaX <span class=\"token operator\">+</span> deltaY <span class=\"token operator\">*</span> deltaY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFloat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onDraw</span><span class=\"token punctuation\">(</span>canvas<span class=\"token operator\">:</span> Canvas<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onDraw</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        matrixST<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        matrixST<span class=\"token punctuation\">.</span><span class=\"token function\">postScale</span><span class=\"token punctuation\">(</span>scale<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        matrixST<span class=\"token punctuation\">.</span><span class=\"token function\">postTranslate</span><span class=\"token punctuation\">(</span>dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        matrixST<span class=\"token punctuation\">.</span><span class=\"token function\">mapRect</span><span class=\"token punctuation\">(</span>desRect<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        canvas<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token comment\">// clockwise when degrees is positive.</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        canvas<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">,</span> desRect<span class=\"token punctuation\">.</span><span class=\"token function\">centerX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> desRect<span class=\"token punctuation\">.</span><span class=\"token function\">centerY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        canvas<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawRect</span><span class=\"token punctuation\">(</span>desRect<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        canvas<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token keyword\">enum</span> <span class=\"token keyword\">class</span> <span class=\"token function\">Rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">val</span> direction<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token function\">CLOCKWISE</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        <span class=\"token function\">COUNTER_CLOCKWISE</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token function\">Vector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">val</span> x<span class=\"token operator\">:</span> Float<span class=\"token punctuation\">,</span> <span class=\"token keyword\">val</span> y<span class=\"token operator\">:</span> Float<span class=\"token punctuation\">,</span> <span class=\"token keyword\">val</span> z<span class=\"token operator\">:</span> Float<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token keyword\">fun</span> <span class=\"token function\">dotProduct</span><span class=\"token punctuation\">(</span>v<span class=\"token operator\">:</span> Vector<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Float <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> y <span class=\"token operator\">*</span> v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> z <span class=\"token operator\">*</span> v<span class=\"token punctuation\">.</span>z</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token keyword\">fun</span> <span class=\"token function\">crossProduct</span><span class=\"token punctuation\">(</span>v<span class=\"token operator\">:</span> Vector<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Vector <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">Vector</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                y <span class=\"token operator\">*</span> v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span> z <span class=\"token operator\">*</span> v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span> z <span class=\"token operator\">*</span> v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                x <span class=\"token operator\">*</span> v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> y <span class=\"token operator\">*</span> v<span class=\"token punctuation\">.</span>x</pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token keyword\">fun</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Double <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> x <span class=\"token operator\">+</span> y <span class=\"token operator\">*</span> y <span class=\"token operator\">+</span> z <span class=\"token operator\">*</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> String <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">\"(<span class=\"token interpolation variable\">$x</span>, <span class=\"token interpolation variable\">$y</span>, <span class=\"token interpolation variable\">$z</span>)\"</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        <span class=\"token keyword\">companion</span> <span class=\"token keyword\">object</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>            <span class=\"token keyword\">fun</span> <span class=\"token function\">crossProduct</span><span class=\"token punctuation\">(</span>v1<span class=\"token operator\">:</span> Vector<span class=\"token punctuation\">,</span> v2<span class=\"token operator\">:</span> Vector<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Float <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>                <span class=\"token keyword\">return</span> v1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> v2<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> v1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> v2<span class=\"token punctuation\">.</span>x</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>            <span class=\"token keyword\">fun</span> <span class=\"token function\">dotProduct</span><span class=\"token punctuation\">(</span>v1<span class=\"token operator\">:</span> Vector<span class=\"token punctuation\">,</span> v2<span class=\"token operator\">:</span> Vector<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Float <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>                <span class=\"token keyword\">return</span> v1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> v2<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> v1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> v2<span class=\"token punctuation\">.</span>y</pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://s3.uuu.ovh/imgs/2023/03/15/3519b041b587e7e5.png\" alt=\"cross product and dot product\" /></p>\n<h1 id=\"向量点乘-dot-product\"><a class=\"anchor\" href=\"#向量点乘-dot-product\">#</a> 向量点乘 Dot Product</h1>\n\\begin{equation}\n\\vec{AB} \\cdot \\vec{AC} = \\parallel \\vec{AB} \\parallel * \\parallel \\vec{AC} \\parallel * \\cos\\theta  \\label{dotproduct} \\tag{1}\n\\end{equation}\n\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>B</mi></mrow><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mrow><mi>A</mi><mi>D</mi></mrow><mo>⃗</mo></mover><mo>=</mo><mo>∥</mo><mover accent=\"true\"><mrow><mi>A</mi><mi>B</mi></mrow><mo>⃗</mo></mover><mo>∥</mo><mo>∗</mo><mo>∥</mo><mover accent=\"true\"><mrow><mi>A</mi><mi>D</mi></mrow><mo>⃗</mo></mover><mo>∥</mo><mo>∗</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\vec{AB} \\cdot \\vec{AD} = \\parallel \\vec{AB} \\parallel * \\parallel \\vec{AD} \\parallel * \\cos\\theta \\tag{2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mrel\">∥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.21633em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.21633em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">∗</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span><span class=\"tag\"><span class=\"strut\" style=\"height:1.21633em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">2</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> 的取值范围为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>π</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0, \\pi]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mclose\">]</span></span></span></span>，由于从<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>B</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{AB}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span> 顺时针旋转到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>C</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{AC}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span> 和从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>B</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{AB}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span> 顺时针旋转到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>D</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{AD}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span> 计算出来的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> 是一样的，无法区分。而对于 <code>Canvas.rotate(degree)</code> ，当 <code>degree &gt; 0 </code> ，表示从向右方向顺时针旋转，当 <code>degree &lt; 0 </code> 时，表示向右方向逆时针旋转。所以，对于从<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>B</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{AB}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span> 顺时针旋转 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi><mo>+</mo><mn>2</mn><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>π</mi><mo>−</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><mi>π</mi><mo>−</mo><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta + 2 * (\\pi - \\theta) =  2 \\pi - \\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>D</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{AD}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>，相当于从<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>B</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{AB}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span> 逆时针旋转 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>D</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{AD}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>。 也即公示\\ref{dotproduct} 所求 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi><mo>∗</mo><mi>d</mi><mi>i</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">\\theta * direction</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span></span></span></span> 即可。+1 表示顺时针， -1 表示逆时针，而 direction 的值可由叉乘计算得出。</p>\n<h1 id=\"向量叉乘-cross-product\"><a class=\"anchor\" href=\"#向量叉乘-cross-product\">#</a> 向量叉乘 Cross Product</h1>\n<p>如图左手坐标系，使用左手法则。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>B</mi></mrow><mo>⃗</mo></mover><mo>×</mo><mover accent=\"true\"><mrow><mi>A</mi><mi>C</mi></mrow><mo>⃗</mo></mover><mo>=</mo><mover accent=\"true\"><msub><mi>N</mi><mi>c</mi></msub><mo>⃗</mo></mover></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\vec{AB} \\times \\vec{AC} = \\vec{N_c} \\tag{3}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0496599999999998em;vertical-align:-0.08333em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1163299999999998em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:1.21633em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">3</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><msub><mi>N</mi><mi>c</mi></msub><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{N_c}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1163299999999998em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span> 指向 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mi>z</mi><mo separator=\"true\">,</mo><mi>d</mi><mi>i</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-z, direction = +1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">1</span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mover accent=\"true\"><mrow><mi>A</mi><mi>B</mi></mrow><mo>⃗</mo></mover><mo>×</mo><mover accent=\"true\"><mrow><mi>A</mi><mi>D</mi></mrow><mo>⃗</mo></mover><mo>=</mo><mover accent=\"true\"><msub><mi>N</mi><mi>d</mi></msub><mo>⃗</mo></mover></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\vec{AB} \\times \\vec{AD} = \\vec{N_d} \\tag{4}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0496599999999998em;vertical-align:-0.08333em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9663299999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1163299999999998em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:1.21633em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">4</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><msub><mi>N</mi><mi>d</mi></msub><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{N_d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1163299999999998em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9663299999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span> 指向 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo><mi>z</mi><mo separator=\"true\">,</mo><mi>d</mi><mi>i</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">+z, direction = -1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">+</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span></p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib29rLmRvdWJhbi5jb20vc3ViamVjdC8yNjgyNDkyMS8=\">Introduction to Linear Algebra</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vZGV2ZWxvcC91aS92aWV3cy90b3VjaC1hbmQtaW5wdXQvZ2VzdHVyZXMvbXVsdGk=\">Android multiple touch event</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTA0MTYyNzQ0ODYwNjg1\">使用斜率计算旋转角度</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTA0MTY2NzAwMDg5MzUx\">使用向量计算旋转角度</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NDcwNzI1OQ==\">三维叉乘 &amp; 坐标系</span></li>\n</ul>\n",
            "tags": [
                "Android",
                "Android Translate Scale Rotate, multiple touch event, Android 双指触控，位移，缩放，旋转"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/02/25/notice-time/",
            "url": "https://limxtop1989.github.io/limxtop/2023/02/25/notice-time/",
            "title": "看见时间",
            "date_published": "2023-02-25T03:53:23.000Z",
            "content_html": "<p>因缘巧合，在毕业两年多后的一趟公交车外，我看见了时间，明白了它到底是何物。</p>\n<p>那个上班等车的清晨，姗姗来迟的公交车未来得及靠站，一群候车的上班族便蜂拥而上，我没有参与，从容闲适地徘徊在候车亭等待下一班车的到来。心急火燎的人群几经努力尝试终有些人挤不上车，放弃撤退回来。不过，车子启动扬起的尘埃还未落定，下一班车就空荡荡地尾随而来，遗憾留下来的人愁眉渐次舒展开来。</p>\n<p>我知道，有些公司会规定迟到要扣钱，但即使没有这样的规矩，我依然能够理解他们挤着上车的举动。当前门空间被拥挤的人群塞得满满当当，司机总是奉劝还在门外挣扎的人，等下一班，很快就来。这是他们这个职业所能留给乘客一丝无奈的善意。</p>\n<p>我们有序上车，由于并非满载行驶，车子极其轻快，一下子就超车了。当我到站走下车回头一望时，上一趟公交车还在远处姗姗来迟。如果我刚才也随波逐流在人群中推搡上车，那我只能在此时此刻之后的几分钟的未来才能到达此地。也就是一个性格使然看似不经意间的选择，我提前到达了未来（本来应该是  <code>t2</code> ，结果是 <code>t1</code>  到达）。</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/02/25/14b5f2ba338fbc0d.png\" alt=\"figure timeline\" /></p>\n<p>那一刻，我仿佛看见了时间，滴答滴答，在自己生命场合里，刻下的尺度。我们的人生只有一次，没有彩排，没办法走到某一刻，有个旋钮可以把我们倒拨回过去，重新作出选择，对比看孰好孰坏。但只要自己不要碌碌无为，虚度光阴，贪图玩乐，像个母亲细心地呵护呱呱坠地的婴孩一样爱护自己的时间，这样自己就可以提前到达未来。在人生有限的生命里，自己可以走的更远，这样也许自己不惑之年所驻足的地方，却是曾经懵懂的自己或者他人活到耄耋之年才能到达。</p>\n<p>人有了点学识，方知自己过去的无知，也许因为意识到这点，便孜孜不倦地求知。学海无涯，回头不是岸，努力游到对岸才是。</p>\n<blockquote>\n<p>“人永远都无法知道自己该要什么，因为人只能活一次，既不能拿它跟前世相比，也不能在来生加以修正。没有任何方法可以检验哪种抉择是好的，因为不存在任何比较。一切都是马上经历，仅此一次，不能准备。—— 米兰・昆德拉”</p>\n</blockquote>\n<p>很不幸，和大多数大道理都懂，小情绪却总是喷薄而出的小孩脾气一样。知道时间珍贵，应该珍惜时间，那些人生至关重要的清规戒律时常淹没在日常琐碎繁杂的洪流里，知行合一是如此之难。</p>\n<p>但其实也没有必要对此太过于介怀。有道是人生苦短，及时行乐。没有必要一直如同苦行僧，偶尔需要些许闲暇的时光，让自己走出家门坐在双层巴士上发呆，看着街边的房屋，树叶如白驹过隙般从车窗前一晃而过。和朋友踩在松软的沙滩或者硬实的木栈道，任凭裹挟着咸味的海风涌入鼻腔，或者坐在自己宽大的书桌前摊开百读不厌，看似百无一用的课外书籍。接受偶尔不那么功利目的，虚度光阴的自己。</p>\n",
            "tags": [
                "时间, time"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/02/04/android-message-loop/",
            "url": "https://limxtop1989.github.io/limxtop/2023/02/04/android-message-loop/",
            "title": "Android消息循环",
            "date_published": "2023-02-04T07:59:56.000Z",
            "content_html": "<h1 id=\"题记\"><a class=\"anchor\" href=\"#题记\">#</a> 题记</h1>\n<p>本文又几年前给同事们培训准备的资料整理而来，只是凭借印象，粗略记录框架原理和要点，需要新人花不少功夫自学探索。待闲暇时，待我重新阅读源码，再详细展开。读懂消息循环，需要具备英语阅读能力，如果尚缺，可以阅读<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXdhdGVycy5tZS9saW14dG9wLzIwMjEvMDgvMTgvRW5nbGlzaC1pbnRyb2R1Y3Rpb24v\">英语自学指南</span>。</p>\n<h1 id=\"用法\"><a class=\"anchor\" href=\"#用法\">#</a> 用法</h1>\n<p>线程是不具备消息循环的，需要调用 <code>Looper.prepare()</code>  &amp;  <code>Looper.loop()</code>  才开启消息循环。系统已经在 <code>ActivityThread</code>  帮忙主线程开启了消息循环，代码如下。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">Looper</span><span class=\"token punctuation\">.</span><span class=\"token function\">prepareMainLooper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ActivityThread</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sMainThreadHandler <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            sMainThreadHandler <span class=\"token operator\">=</span> thread<span class=\"token punctuation\">.</span><span class=\"token function\">getHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">Looper</span><span class=\"token punctuation\">.</span><span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Main thread loop unexpectedly exited\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>所以，主线程是不可以调用 <code>looper.quit()</code> ，不然抛出 <code>new RuntimeException(&quot;Main thread loop unexpectedly exited&quot;)</code> ，而 WorkerThread 如果开启消息循环，不再需要时，得调用 <code>looper.quit()</code> ，否则内存泄漏。</p>\n<h1 id=\"类图\"><a class=\"anchor\" href=\"#类图\">#</a> 类图</h1>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/02/04/e2a2de9b66a113c6.png\" alt=\"\" /><br />\n每个线程都有自己的消息循环机制和队列，实现的关键是将 Looper 对象保存在当前 <code>Thread</code>  的 <code>ThreadLocalMap</code> ，&lt;key, value&gt; = &lt;Looper.sThreadLocal, Looper&gt;.</p>\n<p>android.os.Looper#prepare(boolean)</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> quitAllowed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sThreadLocal<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Only one Looper may be created per thread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        sThreadLocal<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Looper</span><span class=\"token punctuation\">(</span>quitAllowed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>java.lang.ThreadLocal#set</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * Sets the current thread's copy of this thread-local variable</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * to the specified value.  Most subclasses will have no need to</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * override this method, relying solely on the &#123;@link #initialValue&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * method to set the values of thread-locals.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     * @param value the value to be stored in the current thread's copy of</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     *        this thread-local.</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Thread</span> t <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">ThreadLocalMap</span> map <span class=\"token operator\">=</span> <span class=\"token function\">getMap</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>map <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            map<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token function\">createMap</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"overview\"><a class=\"anchor\" href=\"#overview\">#</a> Overview</h1>\n<p>消息队列的消息有指定执行时间，消息循环机制是如何做到准时处理消息的？</p>\n<ol>\n<li>消息循环机制初始化时，在 native 层，监听 `mWakeEventFd。</li>\n<li>消息循环开始时，从消息队列里取消息，自然取不到，就在 native 等待 <code>mWakeEventFd</code>  事件</li>\n<li>handler 发送消息，并进入消息队列，native 层 在 mWakeEventFd 写入数据，唤醒第二步的等待事件。</li>\n<li>第二步从等待中唤醒，读取消息队列的消息，如果消息执行时间是现在，则处理消息。否则计算执行时间和当前的时间差 <code>nextPollTimeoutMillis</code> ，重新插入消息队列，并在 native 层等待，等待超时参数是 <code>nextPollTimeoutMillis</code></li>\n</ol>\n<h1 id=\"nextpolltimeoutmillis\"><a class=\"anchor\" href=\"#nextpolltimeoutmillis\">#</a> nextPollTimeoutMillis</h1>\n<p><code>nextPollTimeoutMillis</code>  看似不起眼，其实是很重要的变量，它有三种类型的值，分别代表不同的含义。</p>\n<ol>\n<li>-1：消息队列没消息，native 使用 <code>wait()</code></li>\n<li>0：（TODO： ）</li>\n<li>自然数：消息队列最早执行的消息（队列头部的消息）在未来，当前没有消息处理，可以歇息。native 使用  <code>wait(int timeout)</code>  ，超时后自动从等待中返回，无需 write 事件唤醒。</li>\n</ol>\n<p>android.os.MessageQueue#next</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> nextPollTimeoutMillis <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token function\">nativePollOnce</span><span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">,</span> nextPollTimeoutMillis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token comment\">// Try to retrieve the next message.  Return if found.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>now <span class=\"token operator\">&lt;</span> msg<span class=\"token punctuation\">.</span>when<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token comment\">// Next message is not ready.  Set a timeout to wake up when it is ready.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    nextPollTimeoutMillis <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>when <span class=\"token operator\">-</span> now<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token keyword\">return</span> msg<span class=\"token punctuation\">;</span><span class=\"token comment\">// Got a message.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>             <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    nextPollTimeoutMillis <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// No more messages.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>              <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// A new message could have been delivered, so go back and look again for a pending message without waiting.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            nextPollTimeoutMillis <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"prepare\"><a class=\"anchor\" href=\"#prepare\">#</a> Prepare</h1>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/02/04/4b24b7075c896855.png\" alt=\"\" /><br />\n使用 Epoll API，在 mWakeEventFd 注册监听</p>\n<h1 id=\"loop-and-handle-message\"><a class=\"anchor\" href=\"#loop-and-handle-message\">#</a> Loop And Handle Message</h1>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/02/04/c8230250364e5395.png\" alt=\"\" /><br />\n此时消息队列还没有消息，在 <code>epoll_wait</code>  等待</p>\n<h1 id=\"insert-message\"><a class=\"anchor\" href=\"#insert-message\">#</a> Insert Message</h1>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/02/04/4b347d81a5ccef35.png\" alt=\"\" /><br />\n往消息队列插入消息后，往 <code>mWakeEventFd</code>  写入一个整数，唤醒 <code>poll_wait</code> ，从而 loop 循环中取出消息，接着处理 Message。</p>\n<h1 id=\"线程间通信\"><a class=\"anchor\" href=\"#线程间通信\">#</a> 线程间通信</h1>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/02/04/ef7b63e078f95c70.png\" alt=\"\" /><br />\n通信线程双方，持有对方的 handler 实例的引用，通过 handler.sendMessage 往对方线程的消息队列发送消息，如此两个线程就可以彼此发送消息，实现通信。</p>\n<h1 id=\"消息作用域\"><a class=\"anchor\" href=\"#消息作用域\">#</a> 消息作用域</h1>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/02/07/be19a511e4b0ac2b.png\" alt=\"\" /><br />\n哪个 Handler 发送的消息，最后出消息队列，仍由该 Handler 处理，所以不同的 Handler 实例，可以有相同的 What，而不会相互干扰。具体实现是 <code>handler.sendMessage(message)</code>  时， <code>handler</code>  对象保存在 <code>message.target</code>  字段。</p>\n<h1 id=\"threadlocal\"><a class=\"anchor\" href=\"#threadlocal\">#</a> ThreadLocal</h1>\n<h1 id=\"雷区\"><a class=\"anchor\" href=\"#雷区\">#</a> 雷区</h1>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p>[1] <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0Bjb3B5Y29uc3RydWN0L3RoZS1tZXRob2QtdG8tZXBvbGxzLW1hZG5lc3MtZDlkMmQ2Mzc4NjQy\">https://medium.com/@copyconstruct/the-method-to-epolls-madness-d9d2d6378642</span><br />\n[2 ] <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW43Lm9yZy9saW51eC9tYW4tcGFnZXMvbWFuNy9lcG9sbC43Lmh0bWw=\">https://man7.org/linux/man-pages/man7/epoll.7.html</span><br />\n[3] The Design of the UNIX Operating System<br />\n[4] /base/core/java/android/os/MessageQueue.java<br />\n[5] /frameworks/base/core/jni/android_os_MessageQueue.cpp<br />\n[6] /system/core/libutils/Looper.cpp</p>\n",
            "tags": [
                "Android",
                "Android, message loop, 消息循环"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/02/04/App-Lock-Architecture/",
            "url": "https://limxtop1989.github.io/limxtop/2023/02/04/App-Lock-Architecture/",
            "title": "应用锁架构",
            "date_published": "2023-02-04T05:05:02.000Z",
            "content_html": "<h1 id=\"需求描述\"><a class=\"anchor\" href=\"#需求描述\">#</a> 需求描述</h1>\n<p>提供给指定应用加锁机制，应用处于上锁状态时，启动该应用需要做解锁操作，否则不仅用户不能与之交互，其应用界面也不可见，包括在 SystemUI 的 Recent 界面，也不可见其缩略图。</p>\n<h1 id=\"入职接手的第一版架构\"><a class=\"anchor\" href=\"#入职接手的第一版架构\">#</a> 入职接手的第一版架构</h1>\n<p>ActivityThread handleActivityResume 发送广播给应用锁的接收器，启动 UnlockService 去查询数据库判断是否当前启动的 Activity 所在应用是否是上锁状态。图我就不画了，那代码不值得投入时间画架构图。主要缺点有</p>\n<ol>\n<li>监听应用启动，判断是否上锁状态耗时，被锁应用已经启动完毕，用户可见可能长达一秒钟后，UnlockActivity 才启动覆盖在上面。</li>\n<li>UnlockActivity &amp; 上锁状态的 Activity 不在同一个 ActivityTask，UnlockActivity 界面按 back，只能强制显示 Launcher，而不是上一个 Activity。</li>\n<li>应用锁数据并没有提供 API 给 SystemUI。</li>\n</ol>\n<h1 id=\"第二版重构架构\"><a class=\"anchor\" href=\"#第二版重构架构\">#</a> 第二版重构架构</h1>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/02/04/726cb4bd64b70c2f.png\" alt=\"\" /><br />\n在 AMS 的 AppLock 模块，绑定 AppLock 的 Service，并保持连接，Activity 的启动事件都通知给 AppLock。AppLock 实现 ContentProvider 对外提供数据访问 API，以此解决第一版 1 &amp; 3 问题。<br />\n遗留缺点：</p>\n<ol>\n<li>对于需要登陆等操作的互联网应用，会启动 MainActivity 后，判断是跳转登陆 Activity，由于连续启动两个上锁状态的 Activity，两个 UnlockActivity 也随之而来，屏幕闪缩。对此，可以单独为 MainActivity 加入过滤列表，不检测上锁解决，但这并非是好的方案。</li>\n</ol>\n<h1 id=\"第三版重构架构\"><a class=\"anchor\" href=\"#第三版重构架构\">#</a> 第三版重构架构</h1>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2023/02/04/f55970d40056afff.png\" alt=\"\" /><br />\n开机后，读取并监听应用锁的数据，（主要是应用是否是上锁状态），应用启动后，在 AMS 检测是否上锁状态，将 Intent 保留在 IntentSender，原始 Intent 篡改为启动 UnlockActivity 的 Intent，制定当前 ActivityTask 启动 UnlockActivity，如此移花接木。解锁后，从 Intent 取出 IntentSender 重新发送请求给 AMS。至此，应用锁几乎完美无缺，久经测试同学的诸多考验。</p>\n",
            "tags": [
                "App Lock, AMS, ActivityManagerService, 应用锁, 应用锁架构"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/01/08/sunset/",
            "url": "https://limxtop1989.github.io/limxtop/2023/01/08/sunset/",
            "title": "晚霞",
            "date_published": "2023-01-08T04:01:26.000Z",
            "content_html": "<p><img data-src=\"https://p.ipic.vip/rvdkpt.jpg\" alt=\"\" /></p>\n<p>作者：火山<br />\n公众号：火山与木星<br />\n原文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvYUlNYnFxSGRNbUpsM3FsbWdwTUYzQQ==\">https://mp.weixin.qq.com/s/aIMbqqHdMmJl3qlmgpMF3A</span></p>\n<p>这天晚上，天空出现了美丽的颜色，从高架桥间望到的那一片天，其色彩让人赞叹。走下过街天桥的楼梯，拥挤破旧的出租房屋渐渐逼近我的鼻尖，我突然想起一个汉字：霞。那片美丽的颜色是霞光或彩霞。同时我想起我久未见面的妹妹，她的名字就叫明霞。</p>\n<p>晚上，我枕着双臂躺在燠热的凉席上，隔壁房间里麻将搓动的声音袭入我租的这个房间里。我很想再看一次那美妙的颜色，我很想用相机把它捕捉下来。此刻外边的天空早已漆黑一片，那光泽早已消逝，这将是一个平凡而乏味的黑夜。</p>\n<p>星期日我不用上班，上了往南边岛屿去的地铁。一个人，我走到了江边，对岸仍是拥挤的出租屋，轮船在江面驶过。我在堤岸上坐了下来，手侧放着向朋友借来的相机。我想如果它在这个黄昏出现，在如此广阔的天空下与它邂逅会是一件多么壮观的事。我要捕捉到它二千米长的光泽与神奇。</p>\n<p>那一日是惨淡收场。它没有出现。八点时候，我收拾水壶和相机，离开堤岸，重新向大陆走去。</p>\n<p>天色昏暗，我有些认不出回去的路。我踏上一条碎石砌就的小径，它的另一头向树林深处延伸。风令树林哗啦作响。我凝视陡起的消失在树林里的路的尽头，恍然觉得有人正从那边走过来。我有一个预感，来人我十分熟悉。我抵抗住这一强烈的幻觉，扭过头横越这条小径向远处的柏油马路走去。</p>\n<p>我的工作是外贸公司里的跟单。外国客户在我们公司下单以后，我们负责寻找工厂，监管质量，直至产品顺利上柜离岸，和客户交付提单。</p>\n<p>公司里的人脾气都很坏，因为工作繁忙而沉重。我算是比较温和的，所以说话没人想听。我的老板对我说必须要变得强硬，对工厂不能心软，这些厂家都是些贪婪和弄虚作假的人，没有什么值得同情。</p>\n<p>办公室里和我关系友好的一个女孩子坐在我的对面。上个礼拜日我和她坐在茶餐厅里，她告诉我她担心出不了手头上那批货会被老板责骂。我默默听着，把那碗椰汁西米露一勺一勺吃完。</p>\n<p>我知道在那条小径上向我走近的是谁。那只能是我的妹妹。我很后悔自己做过的一些事，比如十几岁时和她一起用汤水喂弃猫，她更小的时候，我领着她到处游荡等等。</p>\n<p>有一件事我很不情愿想起。大约在初三的时候，我早上和她一起出门去上学，她从楼梯上滑倒，坐在地上哇哇大哭。在充满痛苦和自卑的十六岁的那个清晨，我没有像以往一样赶紧去抱起我的妹妹，我只是站在楼梯的高处，对她冷酷说出 —— 你自己爬起来。</p>\n<p>从此以后，我的妹妹和我疏离起来。而我念完大学，并到另一个城市谋生以后，几乎把她忘记了。每次过年回家，我都会在客厅里见到一个平凡的女孩子，和远方归来的父亲兄弟闲聊几句以后就戴着耳机躲进房间里。那个房间里满是言情小说、长毛熊、韩国明星的贴纸。</p>\n<p>天气预报能告诉我的只是何时有雨、多云，阴天或起风。它不能告诉我何时天空会出现彩霞。城市里没有人关注这个。</p>\n<p>每天下班后一走出办公室，我都抬头搜寻天空，期待在被楼房和高架桥分割的间隙里，能找到它的踪影。</p>\n<p>某一日，我坐在公共汽车上。车厢里减肥茶的广告声震耳欲聋，一个中年妇女在尖声说话。我看着窗外，车驶上高架桥，楼房阳台布满积尘，窗户紧闭，我不能想象怎么有人可以睡在和马路只隔一层窗户的地方，他们怎么可以入眠。他们会否连发梦也是梦到自己在马路上或公共汽车上呢？对于我，我是无法在这样的楼房中入睡的，我不能忍受汽车引擎持续震动所引起的那种晕眩感。</p>\n<p>突然，在楼房的间隙里，它出现了！公共汽车恰好在这时候到站！门一打开，我就手提相机，一跃而出……</p>\n<p>我被后边的车子撞到了。天旋地转，某些人对我的围观议论声中，我想起自己在十四岁，读初一的时候，有一段时间每天傍晚都骑自行车载妹妹去西边的小学操场。那里有一片广阔的田野，有不被房屋阻隔的天空，那里几乎每晚都会有让我们翘首以待的晚霞。</p>\n<p>妹妹喜欢我载她去看日落，除了天空美丽，也许还因为我如果有两角钱，总会为她买一条雪条。她会说：“你吃上面的一截，下面的一截是我的。”</p>\n",
            "tags": [
                "晚霞"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2023/01/08/azhen/",
            "url": "https://limxtop1989.github.io/limxtop/2023/01/08/azhen/",
            "title": "阿珍",
            "date_published": "2023-01-08T03:53:54.000Z",
            "content_html": "<p><img data-src=\"https://p.ipic.vip/pao9qx.jpg\" alt=\"\" /></p>\n<p>作者：火山<br />\n公众号：火山与木星<br />\n原文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvVmdmTGdnbEF2aTJVWWNMNnczNkpldw==\">https://mp.weixin.qq.com/s/VgfLgglAvi2UYcL6w36Jew</span></p>\n<p>没有任何的变化，疲惫的他依旧回到了单间，关上门，他坐下来。而女友告诉他：她怀孕了，孩子不是他的。</p>\n<p>他往楼下跑去，手里提着滴血的水果刀，他穿过人群和乏睡的车厢，跑过清新的田野，躲到了老家房子的农具房里，锄头和泥墙保护他睡去。儿时喜欢过的穿着红色袜子的小女孩在梦里宣布他无罪。</p>\n<p>被杀死的女人在出租屋里复活，不是因为信仰和魔法，仅仅是因为她要躲开明日早上过来收房租的房东。</p>\n<p>这个烫着头发的丰腴女人名叫阿珍，肚子里有了一个孩子。她拿些卫生纸把胸口的窟窿捂住，提起行李包，穿着拖鞋离开了她和狗屎强过了两年的房间。绿色铁门很新很光滑，锁舌扣合的声音很清脆。</p>\n<p>她拖着血迹，到菜市场买了羊肉和萝卜，打电话给阿猫，说她今晚过去煮饭给他吃。阿猫说今晚不方便，他正在外地出差。她说她现在无家可归了，现在她只剩下他了，他不能不要她。</p>\n<p>阿猫说他的确是在外地，劝她先去朋友那里住几天。她蹲在墙根，说她想见他，眼泪引得路人侧目。阿猫说他没办法。</p>\n<p>几天以后，她过去找阿猫。没有人应门。打电话过去，他说他搬了。她说：你怎么没有和我说起过？阿猫说他忘记了。她问他现在在哪里，他说在家。她问：你的家在哪里？我过去找你。阿猫沉默了一阵，说：你不用来找我，还是去医院堕胎吧……</p>\n<p>不久，人们看到一个蓬头垢面的女人，穿着睡裙，卧在杨箕地铁站 C 出口边上，这一次她终于死了，污黑的右手攥着一个胶袋，里边是一斤已经发臭的羊肉，萝卜上有几个牙印，而左手放在肚皮上，这只手那么干净、那么温柔。</p>\n",
            "tags": [
                "阿珍"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2022/12/23/next-pole/",
            "url": "https://limxtop1989.github.io/limxtop/2022/12/23/next-pole/",
            "title": "下一棒",
            "date_published": "2022-12-23T14:24:25.000Z",
            "content_html": "<p>Author: 叨址 (沈超）<br />\nWechatID: abelkid</p>\n<p>爹：国家守护了我们三年，尽力了，现在每个人都是自己健康的第一责任人，剩下的日子要靠自己了。我通过医院的熟人屯了一批药，随时有症状了也不怕没床位。<br />\n我：做好日常防护，奥密克戎不可怕。正常备药就行，不要屯药。<br />\n爹：年轻人就是没有生活经验。<br />\n我：以前屯板蓝根、屯白醋、屯盐，这些反面经验我们也没有学到什么教训。<br />\n爹：傻瓜，别人都在屯药你不屯，到时候你就买不到药。<br />\n我：所以明知道是一部分人的行为导致另一部分人买不到药。<br />\n不屯药才能让大家都有药。<br />\n爹：孩子，这个社会就是人与人的竞争，资源是有限的，你有了我就没有。<br />\n我：我们让渡出部分权益组成社会，是因为社会能够让其中的每个人都得到超出个人部分的权益和帮助，这是一份公共契约。<br />\n成为利己主义者只攫取好处而损害其他的人利益，会破坏这份契约。因为只追求竞争就不需要组成社会，森林法则就够了。<br />\n更何况竞争应该是竞争把社会蛋糕做大的能力，而不是抢夺蛋糕的能力。我们发展生产到今天，不是那个物资匮乏的社会了。</p>\n<p>爹：错，即使资源不匮乏，也依然是掌握在部分人的手里。你看那么多的空房子，都是资本的炒作，资本家才是坏透了。<br />\n我：你觉得是他们抬高了房价？<br />\n爹：他们抬高了房价，他们造成了失业，他们导致了腐败，他们的科技与狠活伤害人们的身体，他们甚至敢核酸造假祸国殃民。<br />\n我：你有没有想过这些是国家的问题？土地政策抬高了房价，行业打压造成了失业，监管不善导致了环境和食品安全问题，权力寻租和媒体失能导致了腐败和造假？<br />\n爹：我们是发展中国家，现阶段是会有一些问题，但不能把所有问题都归结到国家。我们终究会解决这些问题，别的国家同样有问题。<br />\n我：但别的国家有好的纠错机制，民主、法制、言论，我们一个都没有，如何解决问题？<br />\n爹：我们有强有力的党的领导。<br />\n我：封控和放开都是靠党的领导。现在有效的疫苗、重点人群的接种率、增扩医疗资源、防挤兑预案、科学的宣导与社会心理建设一项都没做到，就靠一句 “每个人都是自己健康的第一责任人”？我们把太多的力气花在了全民核酸这种折腾大众的错误方向上，还怕苍蝇不来叮？<br />\n爹：从封控到放开，就说明我们也有自我纠错能力。<br />\n我：放开是因为各地爆发的抗议活动，是勇敢的大学生和团结的民众为我们争取来的，不是因为良心发现。<br />\n爹：做核酸是政府出钱，现在自测抗原需要花自己的钱，大家肯定更愿意免费做核酸。<br />\n我：这就是没有公民意识啊。<br />\n政府出的也是纳税人的钱，纳税就是我们让渡出去的权益的一部分。每个人让渡出的私权组成了公权力，政府、警察等公权力是用来保护私权而不是侵蚀私权的，所以公权力必须受到监督。<br />\n你有纳税的义务也有监督财政的权利，财政不受监督就会导致腐败。你兜里的钱是你自己的，你纳出去的税也是你的，这个国家也是你的。</p>\n<p>爹：我不管别人是什么样的，我们过好自己的就好了。<br />\n我：你催买房催婚催生的时候可不是这么说的，你说的是别人都在做为什么你不做。<br />\n爹：所以别人都在屯药，你也应该屯。<br />\n我：你刚才可不是这么说的，你批判资本家的时候说他们占用了别人的资源。<br />\n爹：怎么跟爸爸说话呢这是？读书读傻了你。<br />\n我：可是我在厦门已经买不到药了。你屯了药让有的人买不到药，别人屯药让我也买不到药。也就是说，你们屯的药最终导致了你们的下一代没有药。<br />\n爹：不对，正是因为我屯了药，我才能帮你这个买不到药的下一代兜底。</p>\n<p>爹：张雪峰说我的女儿不用考研，我给我女儿已经赚够了一生的钱，她不会为钱发愁，她不用为了生计去做她不想做的事情。<br />\n能够兜底的父母都会为下一代提供更好的环境。<br />\n我：更好的环境是指现在的环境并不好，至少张雪峰认为现在的考研并不是奔着好去的。<br />\n爹：是的，如果好，就不存在为了生计做不想做的事情。<br />\n我：张雪峰为了自己的下一代跳出这个环境，而让这个互害的法则继续侵害别人的下一代。我不能苟同。<br />\n爹：他改变不了什么，只能自求多福了。<br />\n我：那你觉得这是一个好的社会环境吗？<br />\n爹：不算。<br />\n我：你愿意你的后代像你一样挣扎在这样一个沉疴制度导致的自利互害的社会吗？<br />\n爹：不愿意，但又能怎么办呢？<br />\n我：你认为这不是个好的社会，也不愿意后代生活在这样的社会中，又认为你无法改变社会进程，那为什么要繁衍下一代来重复承受你的困境呢？<br />\n柏拉图讲爱情，黑格尔讲婚姻，似乎没有哲学家讲繁衍。如果人类还有一点自由意志的话，那么我认为是想要选择生活。第一步是想要，第二步是选择。罗曼・罗兰的 “热爱生活” 不能被理解为鸡汤式的自我麻醉，热爱生活的形式是依然想要、依然选择，而不是看清生活真相后的无奈妥协与苟且。<br />\n我们称颂乔布斯，称颂哥伦布，称颂一切改变世界的英雄，但源于希腊的个人英雄主义叙事的遗害是成功学，我们称颂的并不是 “想要” 改变世界的精神，而是 “成功” 改变世界的结果。如果说在漫长的人类历史中注定要掩埋那些未竟的努力和失败，那么缩短到一年之内的接力便可让我们看见清晰的脉络：四通桥上的孤勇者的标语响遍全国，A4 运动导致灵车飘移式的转向，推动这一切的是参与其中的每一个人，是自下而上的选择意愿，而不是某一个人的金牌令箭。<br />\n或许我们的 “想要” 并不像这短短几个月内的奇效，而这一次的事件也只是接力赛中的其中一棒，其中的关键在于每个人都放弃关于伟大的幻想，放弃一蹴而就的救世者叙事，承认聚沙成塔的公民之力，承认我们想要选择的生活。即使我们不是最后冲线的那一棒，也承认每一棒的功绩与不朽，跑好自己的一棒并交给下一代接棒人，最终才有可能让他们的下一代，生活在你所愿景的更美好的社会中。<br />\n为每代下一代推动更美好的社会，这才是繁衍的真义。</p>\n<p>以上仿苏格拉底对话录是虚构的，但以下对话是真实的，来自反派影评《响指之后，何去何从？》。</p>\n<p>杨超：特别听不得有一句话，&quot; 我也改变不了什么”。这句话首先是一个绝对的废话，包含着极大的狂妄和极大的自卑。废话，你当然改变不了什么，你一个人怎么可能改变什么，但是很多人这么说的时候，其实为后面放弃做准备的。反正我也干不了什么，我就这样了，以一种非常低调谦逊的状态，说一句非常狂妄，但是又抛弃责任的话。先是狂到上帝那去，然后再低到魔鬼那，把自己的所有责任全都放弃掉。</p>\n<p>波米：我们今天谈的你也改变不了行业，你改变不了世界。其实改变世界的过程是一个非常非常漫长的接力赛跑，而每一个人或者每一代人都以为自己跑的是最后一棒，都以为到自己那一棒的时候应该出成绩。</p>\n<p>但是有一个时期你会意识到，真正改变了世界的过程都不是 4 棒的问题，它可能是 40 棒、400 棒的问题，而你其实只是跑的第 20 棒、第 2 棒，但是在这样一个情况下，我们怎么做？</p>\n<p>还记不记得《银翼杀手 2049》，就是高司令，他开始其实就是这样的。他原以为自己是救世者，到中间他发现每个人都是这么想的，原来我是非常普通的一个，但是他因此干脆拿起枪来把自己崩了，或者说这事跟我没关系？他不是。他最后还是把自己的使命完成，所以最后一幕落在那，他把哈里森福特带到真正的天选之子那里，他自己躺在了外面。在那一刻，我觉得这是最牛逼的英雄成长。因为他完成了最大的觉醒，觉醒之处在于，他认识到了自己不是跑最后一棒的人，但与此同时我也要完成好我自己这一棒。</p>\n<p>改变世界的事在你这完不成，那你要做的事情是你把这种信念，你把刚才说的所有，你要坚持常识，坚持保持判断是非的能力，传给下一棒跑步的人，别掉棒，继续跑。</p>\n<p>杨超：而且我们的下一代人会不会有可能就是最后一棒，其实取决于我们跑的怎么样，说不定你要跑得非常好，下一代人成最后一棒。</p>\n<p>波米：你要把棒扔了，那肯定就没有下一棒，永远是一个未竟事业。</p>\n",
            "tags": []
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2022/10/19/how-to-make-money/",
            "url": "https://limxtop1989.github.io/limxtop/2022/10/19/how-to-make-money/",
            "title": "如何赚大钱",
            "date_published": "2022-10-19T14:53:22.000Z",
            "content_html": "<h1 id=\"题记\"><a class=\"anchor\" href=\"#题记\">#</a> 题记</h1>\n<p>创造财富是致富的一种直接的方式。（Creating wealth is a way to get rich.）而财富，是你身上拥有，且别人需要的东西。</p>\n<h1 id=\"最佳途径\"><a class=\"anchor\" href=\"#最佳途径\">#</a> 最佳途径</h1>\n<p>如果想变得富有，最好的方式是创立或者加盟初创科技公司，特别是攻克技术难题的公司。这是一种几百年来，屡试不爽可靠的致富方式。</p>\n<h1 id=\"打工人的职业选择\"><a class=\"anchor\" href=\"#打工人的职业选择\">#</a> 打工人的职业选择</h1>\n<p>经济上来看，初创公司相当于将全部的职业生涯压缩为短短的几年时间完成，而不是低强度的四十年，在这几年的时间里，你尽可能努力地工作。这可以通过让自己加倍努力工作达成，加班是一种方式，但不是唯一和优雅的方式。每天在办公室会有诸多工作事项，但并非他们都可以转化为同等的价值。</p>\n<ol>\n<li>有些工作并不能创造价值，或者收获甚微，比如因为公司的规则，不得不和同事做毫无意义的争论，或者撰写冗长的工作日报。特别是对那些日报没有洋洋洒洒上千字会被认为没有营养和内容的公司，请敬而远之。由此当我们考虑工作时间的时候，应该衡量的是有效工作时间，并将其最大化，而不是简单的考量工作时长。</li>\n<li>不同的工作，创造的价值不一样，花一年的时间搬砖砌墙，和花三年五载的漫长岁月，构思图灵机模型为世界从工业革命走向信息革命奠定基础，完全不能相提并论。</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>财富</mtext><mo>=</mo><mtext>有效工作时长</mtext><mo>∗</mo><mtext>单位时间创造的财富</mtext></mrow><annotation encoding=\"application/x-tex\">财富 = 有效工作时长 * 单位时间创造的财富\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">财</span><span class=\"mord cjk_fallback\">富</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">有</span><span class=\"mord cjk_fallback\">效</span><span class=\"mord cjk_fallback\">工</span><span class=\"mord cjk_fallback\">作</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">长</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">单</span><span class=\"mord cjk_fallback\">位</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">间</span><span class=\"mord cjk_fallback\">创</span><span class=\"mord cjk_fallback\">造</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">财</span><span class=\"mord cjk_fallback\">富</span></span></span></span></span></p>\n<p>综上，当我们提高任何一个变量，都可以让财富增长。</p>\n<h1 id=\"复利效应\"><a class=\"anchor\" href=\"#复利效应\">#</a> 复利效应</h1>\n<p>今天的工作内容可以积累，为日后的工作做铺垫或者打基础，而不应该像一次性筷子，用过之后就丢弃，明天是全新的开始，新的轮回。这样每天进步一点点，假以时日，未来可期。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mn>0.01</mn><msup><mo stretchy=\"false\">)</mo><mn>365</mn></msup><mo>=</mo><mn>37.783</mn></mrow><annotation encoding=\"application/x-tex\"> (1 + 0.01)^{365} = 37.783\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">6</span><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">7</span><span class=\"mord\">.</span><span class=\"mord\">7</span><span class=\"mord\">8</span><span class=\"mord\">3</span></span></span></span></span></p>\n<h1 id=\"规模效应\"><a class=\"anchor\" href=\"#规模效应\">#</a> 规模效应</h1>\n<p>一份投资 100 块，利润率是 10%，利润所得是 10，当投资规模扩大为 10 万，利润率几本是保持不变的，此时利润所得便是 1 万。当应用软件的单条广告收入甚微，甚至可以忽略不计，但当用户数成千上万过亿，相乘一下，依然收入不菲。</p>\n<h1 id=\"打工人的技能发展选择\"><a class=\"anchor\" href=\"#打工人的技能发展选择\">#</a> 打工人的技能发展选择</h1>\n<p>如若要获得更高的个人劳动报酬，可以掌握少数人掌握的技能，或者市场大量需要的技能，不管哪一种，都可以促成劳动力供给少于需求的局面，让自己变得稀缺，从而自然而然获得更高的报酬。如果可以兼而有之，则更好。工资是企业支付你的劳动技能的价格，其高低取决于技能是否稀缺。一旦技能稀缺，需要此技能的企业过多，企业只能提高支付价格以获取人才。无法提供更高价格的企业最后只能和人才失之交臂。如果还不大明白，请看下方经济学的供需理论。</p>\n<p>假设市场需要十个工人，工资是 100 每天，但市场上有 12 个工人，此时有两个工人必然面临失业，于是，他们只能降低收入期望，比如 80 每天，由于用人成本总体下降，从而吸引提供更低薪酬的用人单位进入市场招聘。劳动力供过于求如此，供给不足则反过来。</p>\n<p>需求指的是人们有能力购买，并愿意购买某个具体财货的欲望。显示的是其它因素不变的情况下（ceteris paribus），随着价格升降，某个体在每段时间内所愿意购买某财货的数量。</p>\n<p>在某一价格下，消费者愿意购买的某一货物总数量称为 “需求量”(quantity demanded)。在不同价格下，需求量会不同。需求也就是说价格与需求量的关系。若以图像表示，便称为 “需求曲线”。</p>\n<p>供给，指特定市场上在一定时期内，与每一销售价格相对应，生产者愿意且能供应的财货数量。但供给并不完全代表生产，它属于生产的一部分，但供给量并不即是生产者在计算一系列成本所愿意生产的数量。生产量依据利润最大化条件决定，它在短期往往是固定，但供给量则可以随时变动。也就是说生产量是虚拟的、是人们算出来的，而供给量是现实的、真实发生的量。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><img data-src=\"https://p.ipic.vip/bmbd03.jpg\" alt=\"\" /></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><em>标准的供给和需求模型：正斜率的是供给曲线，代表生产者愿意在某一价格水平下出售的物品数量；负斜率的是需求曲线，代表消费者愿意在某一价格水准下购买的数量。透过模型的分析，可发现两条曲线相交之处（均衡点）就是均衡价格和均衡产量。</em></td>\n</tr>\n</tbody>\n</table>\n<p>供求关系决定市场价格。</p>\n<ul>\n<li>供给稀缺不能满足有效需求，需求方不愿意得不到商品，愿支付更高的价格。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><img data-src=\"https://p.ipic.vip/jcqd1h.jpg\" alt=\"\" /></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><em>供给是蓝线 S，需求是红线 D，当需求由 D1 变动为 D2 时，成交的价格和数量也随之变动。</em></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>供给充裕超过有效需求，商品不能全部出售，势必导致供给方降低价格增加有效需求。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><img data-src=\"https://p.ipic.vip/qx17ni.jpg\" alt=\"\" /></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><em>供给是蓝线 S，需求是红线 D，当供给由 S1 变动为 S2 时，成交的价格和数量也随之变动。</em></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"金钱不是财富\"><a class=\"anchor\" href=\"#金钱不是财富\">#</a> 金钱不是财富</h1>\n<p>如果想要创造财富，理解什么是财富将大有裨益。财富并非和金钱等同，财富伴随着人类历史，金钱或者货币是相对近期的发明。财富才是根本的，是可以满足人类需求的物品：食物，衣服，房子，汽车…… 你可以没有金钱货币，便拥有财富。财富才是我们需要的，金钱不是。但如果财富是如此重要，为什么我们经常谈论提及的是赚钱？这不过是一种简化：金钱是一种交换财富的介质，在实践中，财富并不总是方便直接交换。</p>\n<p>往往身上的财富并不能满足自己和家庭所需，你可以用现有的财富和别人的财富做交换。只是交换时，彼此并不能恰好拥有彼此所需可交换的财富，比如我有多余的汽车需要房子，但对方是需要汽车但没有房子，对方可以支付我房子等额的金钱货币，然后我再用这些金钱找第三者买房子。或者因为财富不好分割，但金钱很适合。金钱货币才因此应运而生。所以，对于我们而言，重要的是财富本身，而不是金钱，金钱只是一种一般等价物，方便我们进行财富转移交换的媒介。财富和金钱的关系应该是这样的图景。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><img data-src=\"https://p.ipic.vip/orvvw2.jpg\" alt=\"\" /></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><em>物物交换存在很多弊端，比如猫有鱼想和农民换稻米，农民是有稻米但他想用稻米和猎人换活鸡，猎人是有活鸡，但他只想吃鱼。所以交易无法进行。如果有一般等价物，比如货币，猫就可以用鱼和猎人的货币交换，然后用收入的货币和农民交换稻米。其他角色也如此，于是大家都换到自己心仪的商品。</em></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"蛋糕谬论\"><a class=\"anchor\" href=\"#蛋糕谬论\">#</a> 蛋糕谬论</h1>\n<p>会有人误以为，世界上的财富总量是恒定的，在这样的上下文里，我们总是将财富称作为 “蛋糕”，但其实，财富的创造并非是零和游戏，不是我赚点，就注定有人要吃亏。<strong>蛋糕是可以做大的</strong>。比如，今年的夏天，与其在屋子里干坐着碌碌无为，我把自家后院的荒地开垦，种了草莓，这就是在创造财富，水果成熟时，可以采摘拿到市场售卖换金钱。这个过程中，我变得富有了，但并没有人因此变得更加贫穷。伴随人类历史，财富总是不停地被创造和毁灭，但总体上，创造多于毁灭。</p>\n<h1 id=\"法治\"><a class=\"anchor\" href=\"#法治\">#</a> 法治</h1>\n<p>在一个法治国家，每个人都可以自由地追逐财富，并自由使用，国家财富会逐步增加，蛋糕可以越做越大。不用担心窃取财富。毕竟，如果知道积累财富的最终结果是被他人夺取和打击，我们自然就不会去创造那么多的财富。从以前的打土豪劣绅，到最近马斯克的提问 “马云去哪里了？…… 我只是好奇，随口问一下”。</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ul>\n<li>[1] <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5tLndpa2lwZWRpYS5vcmcvemgtaGFucy8lRTklOUMlODAlRTYlQjElODIlRTglODglODclRTQlQkUlOUIlRTclQjUlQTY=\"> 供需曲线 </span></li>\n<li>[2] [ How to make wealth in hackers and painters ]</li>\n</ul>\n",
            "tags": [
                "财富，赚钱"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2022/09/10/when-I-was-young/",
            "url": "https://limxtop1989.github.io/limxtop/2022/09/10/when-I-was-young/",
            "title": "钱很重要么？",
            "date_published": "2022-09-10T11:41:17.000Z",
            "content_html": "<p>年轻的时候，总以为钱很重要。<br />\n长大以后，才发觉，那时还是太年轻。<br />\n生活不仅有眼前的苟且，还有诗和远方。<br />\n但也需要一路的盘缠。</p>\n",
            "tags": [
                "钱，年轻"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2022/09/10/Java-IO/",
            "url": "https://limxtop1989.github.io/limxtop/2022/09/10/Java-IO/",
            "title": "Java IO",
            "date_published": "2022-09-10T02:18:36.000Z",
            "content_html": "<h1 id=\"inputstream\"><a class=\"anchor\" href=\"#inputstream\">#</a> InputStream</h1>\n<p>InputStream: 输入流的抽象，提供应用程从内存读取任意字节数（read 指针向后偏移），跳过，标记流位置（标记一个索引位置，reset 后，read 指针会重置为 mark 的值），流剩余字节数的 API。<br />\n<img data-src=\"https://s3.uuu.ovh/imgs/2023/07/07/af4a166586f90022.jpeg\" alt=\"data_structure\" /></p>\n<p><img data-src=\"https://pic.imgdb.cn/item/64a828bf1ddac507cc366039.jpg\" alt=\"input_stream_class_diagram\" /></p>\n<ol>\n<li>FilterInputStream: 算是装饰者，包装或者聚合了 <code>InputStream</code> ，使用它作为基本的数据源。覆盖 <code>InputStream</code>  所有方法，简单的把方法调用转发给 <code>InputStream</code> 。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a   </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">InputStream</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Closeable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">volatile</span> <span class=\"token class-name\">InputStream</span> in<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * Creates a &lt;code>FilterInputStream&lt;/code></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * by assigning the  argument &lt;code>in&lt;/code></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     * to the field &lt;code>this.in&lt;/code> so as</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     * to remember it for later use.</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     * @param   in   the underlying input stream, or &lt;code>null&lt;/code> if</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     *          this instance is to be created without an underlying stream.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">FilterInputStream</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span> in<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>in <span class=\"token operator\">=</span> in<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>ByteArrayInputStream: 内部使用字节数组  <code>byte buf[]</code>  作为直接流数据源，每一次 read，都从 buf 读取数据。</li>\n<li>BufferedInputStream: 内部也使用字节数组  <code>byte buf[]</code> ，不过它是代理的角色， 实际的数据流是类的聚合字段 <code>InputStream in</code> ，每一次 read 都是从 buf 读取数据，buf 数据读完，会从 <code>in</code>  预读取一块数据填充  <code>buf</code> 。<br />\n一般而言，当我们使用 File 作为数据源的时候，需要配合 <code>BufferedInputStream</code>  使用 <code>new BufferedInputStream(new BufferedInputStream())</code> ，一次读取文件系统的一大块数据（涉及磁盘旋转等耗时物理操作），然后应用程序可以一次一次读取小块数据，提高性能。</li>\n<li>FileInputStream: 使用文件系统的文件作为流数据源，读取其原始的字节数据，如果要读取字符流，考虑使用 <code>FileReader</code></li>\n</ol>\n<blockquote>\n<p>A FileInputStream obtains input bytes from a file in a file system. FileInputStream is meant for reading streams of raw bytes such as image data. For reading streams of characters, consider using FileReader.</p>\n</blockquote>\n<ol start=\"5\">\n<li>ObjectInputStream: An ObjectInputStream deserializes primitive data and objects previously written using an ObjectOutputStream.</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectStreamDemo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">FileOutputStream</span> fos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t.tmp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ObjectOutputStream</span> oos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectOutputStream</span><span class=\"token punctuation\">(</span>fos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        oos<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">12345</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        oos<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Today\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        oos<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        oos<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">FileInputStream</span> fis <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t.tmp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">ObjectInputStream</span> ois <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectInputStream</span><span class=\"token punctuation\">(</span>fis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> ois<span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">String</span> today <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> ois<span class=\"token punctuation\">.</span><span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">Date</span> date <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Date</span><span class=\"token punctuation\">)</span> ois<span class=\"token punctuation\">.</span><span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        ois<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>SequenceInputStream: 代表多个 <code>InputStream</code>  的逻辑拼接 <code>Enumeration&lt;? extends InputStream&gt; e</code> 。程序开始时读取数组第一个 <code>InputStream</code>  元素，读完流数据，继续读第二个元素，如此反复。</li>\n</ol>\n<blockquote>\n<p>A SequenceInputStream represents the logical concatenation of other input streams. It starts out with an ordered collection of input streams and reads from the first one until end of file is reached, whereupon it reads from the second one, and so on, until end of file is reached on the last of the contained input streams.</p>\n</blockquote>\n<ol start=\"7\">\n<li>PushbackInputStream: 在 <code>read</code>  的基础上，支持 <code>unread</code> ，程序可以提前读取后续的字节，看看是什么数据，然后 <code>unread</code>  回到原来的状态，决定如何 <code>read</code> 。类似 <code>mark &amp; reset</code> ，不同之处是 unread 额外提供数据（可能是上一次 read 的，也可能是别的）， 覆盖 reset 区域。</li>\n<li>PipedInputStream: 管道输入流必须和管道输出流连接，一般是一个线程从管道输入流读取数据，这些数据是另一个线程往管道输入流写入。单一线程使用管道输入输出流是不推荐的。PipedInputStream 构造时，传入管道输出流，并和它建立连接。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PipedInputStream</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">InputStream</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PipedInputStream</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PipedOutputStream</span> src<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> pipeSize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         <span class=\"token function\">initPipe</span><span class=\"token punctuation\">(</span>pipeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>         <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PipedOutputStream</span> src<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        src<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PipedOutputStream</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">OutputStream</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PipedInputStream</span> snk<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>snk <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NullPointerException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sink <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> snk<span class=\"token punctuation\">.</span>connected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Already connected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        sink <span class=\"token operator\">=</span> snk<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        snk<span class=\"token punctuation\">.</span>in <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        snk<span class=\"token punctuation\">.</span>out <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        snk<span class=\"token punctuation\">.</span>connected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>管道输出流写入数据时，向管道输入流发送接收的消息。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PipedOutputStream</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">OutputStream</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sink <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pipe not connected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        sink<span class=\"token punctuation\">.</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>管道输入流接收管道输出流的数据，保存在  <code>buffer[in++]</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PipedInputStream</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">InputStream</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token function\">checkStateForReceive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        writeSide <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>in <span class=\"token operator\">==</span> out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function\">awaitSpace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>in <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            in <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            out <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        buffer<span class=\"token punctuation\">[</span>in<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>in <span class=\"token operator\">>=</span> buffer<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            in <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     * The index of the position in the circular buffer at which the</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     * next byte of data will be stored when received from the connected</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     * piped output stream. &lt;code>in&amp;lt;0&lt;/code> implies the buffer is empty,</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     * &lt;code>in==out&lt;/code> implies the buffer is full</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     * @since   JDK1.1</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">int</span> in <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>     * The index of the position in the circular buffer at which the next</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     * byte of data will be read by this piped input stream.</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>     * @since   JDK1.1</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">int</span> out <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://pic.imgdb.cn/item/64a829691ddac507cc38abe9.jpg\" alt=\"\" /><br />\n管道输入流维护写入，读出的下标索引，应用程序 <code>read</code> ，就从 buffer 读取数据 <code>int ret = buffer[out++] &amp; 0xFF;</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PipedInputStream</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">InputStream</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">int</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>connected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pipe not connected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>closedByReader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pipe closed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>writeSide <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>writeSide<span class=\"token punctuation\">.</span><span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                   <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>closedByWriter <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>in <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write end dead\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        readSide <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">int</span> trials <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>in <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>closedByWriter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token comment\">/* closed by writer, return EOF */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>writeSide <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>writeSide<span class=\"token punctuation\">.</span><span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>trials <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pipe broken\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token comment\">/* might be a writer waiting */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token function\">notifyAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>InterruptedIOException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">[</span>out<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>out <span class=\"token operator\">>=</span> buffer<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            out <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>in <span class=\"token operator\">==</span> out<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token comment\">/* now empty */</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            in <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"9\">\n<li>LineNumberInputStream: 读取字节如果是 A carriage-return character or a carriage return followed by a newline character 则 lineNumber 递增计数。应用程序可以通过 <code>java.io.LineNumberInputStream#getLineNumber</code>  获取行号记录。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LineNumberInputStream</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FilterInputStream</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> pushBack<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            pushBack <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            c <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token keyword\">case</span> <span class=\"token string\">'\\r'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            pushBack <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pushBack <span class=\"token operator\">==</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                pushBack <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token keyword\">case</span> <span class=\"token string\">'\\n'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            lineNumber<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"10\">\n<li>DataInputStream: 和 ObjectInputStream 类似，区别在于它只支持读取基本数据类型。</li>\n</ol>\n<blockquote>\n<p>A data input stream lets an application read primitive Java data types from an underlying input stream in a machine-independent way. An application uses a data output stream to write data that can later be read by a data input stream.</p>\n</blockquote>\n<ol start=\"11\">\n<li>SocketInputStream: socket 通信时，系统分配一个 fd 给接收端，用于接收数据。应用程序通过系统读文件的系统调用，就可以读取 fd 的数据了。</li>\n</ol>\n<blockquote>\n<p>This stream extends FileInputStream to implement a SocketInputStream. Note that this class should NOT be public.</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">SocketInputStream</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FileInputStream</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span> b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> off<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> length<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> timeout<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// EOF already encountered</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>eof<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token comment\">// ignore</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// acquire file descriptor and do the read</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">FileDescriptor</span> fd <span class=\"token operator\">=</span> impl<span class=\"token punctuation\">.</span><span class=\"token function\">acquireFD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            n <span class=\"token operator\">=</span> <span class=\"token function\">socketRead</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> off<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ConnectionResetException</span> rstExc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            gotReset <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            impl<span class=\"token punctuation\">.</span><span class=\"token function\">releaseFD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token comment\">// ignore</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        eof <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"13\">\n<li>CheckedInputStream: 维护一个读取数据的校验和功能，可以验证输入数据的完整性。</li>\n</ol>\n<blockquote>\n<p>An input stream that also maintains a checksum of the data being read. The checksum can then be used to verify the integrity of the input data.</p>\n</blockquote>\n<h1 id=\"outputstream\"><a class=\"anchor\" href=\"#outputstream\">#</a> OutputStream</h1>\n<p><img data-src=\"https://pic.imgdb.cn/item/64a82a161ddac507cc3ae480.jpg\" alt=\"output_stream_class_diagram\" /><br />\n 输出流总体上和输入流类似，只是方向相反。比如 <code>BufferedOutputStream</code>  有字节缓冲区 <code>byte buf[]</code> ，接收应用程序的写入，当缓冲区写满了，就调用装饰的输出流 <code>OutputStream out</code> 。 <code>PrintStream</code>  比较特殊，涉及到 <code>Writer</code> ，我们放到 <code>Writer</code>  部分展开。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">BufferedOutputStream</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FilterOutputStream</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * Writes the specified byte to this buffered output stream.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * @param      b   the byte to be written.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * @exception  IOException  if an I/O error occurs.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">>=</span> buf<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token function\">flushBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        buf<span class=\"token punctuation\">[</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span>b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"reader\"><a class=\"anchor\" href=\"#reader\">#</a> Reader</h1>\n<p><img data-src=\"https://pic.imgdb.cn/item/64a82a941ddac507cc3c63fe.jpg\" alt=\"write_class_diagram\" /><br />\n 一次读取 <code>InputStream</code>  的两个字节，并使用指定的字符集解析成对应字符。Java 中一个 <code>char</code>  占用 2 <code>byte</code> ，但对于 UTF-8 字符集，它的编码长度是可变的，用 1`byte・来编码常见字符。</p>\n<blockquote>\n<p>A char represents a character in Java (*). It is 2 bytes large (or 16 bits).<br />\nThat doesn't necessarily mean that every representation of a character is 2 bytes long. In fact many character encodings only reserve 1 byte for every character (or use 1 byte for the most common characters).</p>\n</blockquote>\n<ol>\n<li>InputStreamReader:  作为字节流到字符流的桥接，读取一个或者多个字节，使用字符集解码成对应的字符。使用装饰者模式实现，解码工作由 <code>StreamDecoder</code>  完成。</li>\n</ol>\n<blockquote>\n<p>An InputStreamReader is a bridge from byte streams to character streams: It reads bytes and decodes them into characters using a specified charset. The charset that it uses may be specified by name or may be given explicitly, or the platform's default charset may be accepted.<br />\nEach invocation of one of an InputStreamReader's read() methods may cause one or more bytes to be read from the underlying byte-input stream. To enable the efficient conversion of bytes to characters, more bytes may be read ahead from the underlying stream than are necessary to satisfy the current read operation.<br />\nFor top efficiency, consider wrapping an InputStreamReader within a BufferedReader. For example:<br />\n <code>BufferedReader in = new BufferedReader(new InputStreamReader(System.in));</code></p>\n</blockquote>\n<ol start=\"2\">\n<li>FileReader: 实现很言简意赅和巧妙的令人叹为观止。提供 <code>FileInputStream</code>  给 <code>InputStreamReader</code>  作字节流数据源，就完事了，整个类才三个重载的构造器。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileReader</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">InputStreamReader</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    * Creates a new &lt;tt>FileReader&lt;/tt>, given the name of the</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    * file to read from.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    * @param fileName the name of the file to read from</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    * @exception  FileNotFoundException  if the named file does not exist,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    *                   is a directory rather than a regular file,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    *                   or for some other reason cannot be opened for</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    *                   reading.</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> fileName<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">FileNotFoundException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>BufferedReader: 也是使用装饰者模式。内部定义一个缓冲区，一次性读取源字符流一大块字符，以此对外提供字符流。</li>\n<li>FilterReader: 同样是装饰者模式。里面啥也没做，所有的消息都转发给被装饰者，即内部的 <code>Reader</code> .</li>\n<li>PushbackReader: 撤销读的实现很巧妙，使用 <code>char[] buf;</code>  并且索引 <code>pos</code>  初始为 size，unread 的字符写在这里，后续的读优先从这里读，里面如果没有数据，再从被装饰的 <code>Reader</code>  读。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PushbackReader</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FilterReader</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">/** Pushback buffer */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">/** Current position in buffer */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> pos<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     * Creates a new pushback reader with a pushback buffer of the given size.</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     * @param   in   The reader from which characters will be read</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     * @param   size The size of the pushback buffer</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     * @exception IllegalArgumentException if &#123;@code size &lt;= 0&#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PushbackReader</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Reader</span> in<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"size &lt;= 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>buf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>StringReader: 使用字符串作为字符流的数据源。</li>\n<li>CharArrayReader: 使用字符数组作为字符流的数据源，里面的实现就全都是数组操作了。</li>\n<li>PipedWriter: 与 <code>PipedInputStream</code>  类似，只是 API 接口参数从 <code>byte</code>  换成了  <code>char</code> 。</li>\n<li>LineNumberReader: 增加字符流里的行号识别功能。</li>\n</ol>\n<h1 id=\"writer\"><a class=\"anchor\" href=\"#writer\">#</a> Writer</h1>\n<p>与 <code>Reader</code>  方向相反，和 <code>OutputStream</code>  类似，不再赘述。<br />\n<img data-src=\"https://pic.imgdb.cn/item/64a82ab51ddac507cc3cc52b.jpg\" alt=\"\" /></p>\n<h1 id=\"randomaccessfile\"><a class=\"anchor\" href=\"#randomaccessfile\">#</a> RandomAccessFile</h1>\n<p>把文件当成一个 <code>byte[]</code> ，支持同时读写操作，读写指针做相应偏移。<br />\n<img data-src=\"https://pic.imgdb.cn/item/64a82ad11ddac507cc3d1a09.jpg\" alt=\"random_class_diagram\" /></p>\n",
            "tags": [
                "Java",
                "Java, IO, 源码"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2022/08/19/android-touch-event/",
            "url": "https://limxtop1989.github.io/limxtop/2022/08/19/android-touch-event/",
            "title": "Android 触摸事件派发",
            "date_published": "2022-08-19T14:42:18.000Z",
            "content_html": "<h1 id=\"return-true-at-ontouchevent-of-the-child-view-during-action-down\"><a class=\"anchor\" href=\"#return-true-at-ontouchevent-of-the-child-view-during-action-down\">#</a> Return true at onTouchEvent of the child view during action down</h1>\n<p><img data-src=\"https://p.ipic.vip/349h30.jpg\" alt=\"touch down\" /><br />\nThe subsequent move and up actions will be dispatched to the child view directly, but the parent views still have a chance to intercept the actions.<br />\n<img data-src=\"https://p.ipic.vip/9g9w2u.jpg\" alt=\"\" /></p>\n<p>Once the parent views intercept the touch event during move action by return true at  <code>onInterceptToucheEvent</code></p>\n<p><img data-src=\"https://p.ipic.vip/usy7yu.jpg\" alt=\"\" /><br />\na cancel event is generated and dispatched to the intercepted child view, in the mean while, the subsequent move and up actions will be dispatched to parent view directly rather than the child view.<br />\n<img data-src=\"https://p.ipic.vip/xyt8ic.jpg\" alt=\"\" /></p>\n<h1 id=\"return-false-at-ontouchevent-the-child-view-during-action-down\"><a class=\"anchor\" href=\"#return-false-at-ontouchevent-the-child-view-during-action-down\">#</a> Return false at onTouchEvent the child view during action down</h1>\n<p><img data-src=\"https://p.ipic.vip/ytljka.jpg\" alt=\"\" /><br />\nThe subsequent move and up actions will not be dispatched to the child view any more.<br />\n<img data-src=\"https://p.ipic.vip/7eocw3.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "Android",
                "Android, Touch Event Dispatch, 触摸事件派发"
            ]
        },
        {
            "id": "https://limxtop1989.github.io/limxtop/2022/07/24/Android-animation-principles/",
            "url": "https://limxtop1989.github.io/limxtop/2022/07/24/Android-animation-principles/",
            "title": "Android 动画原理",
            "date_published": "2022-07-24T14:42:18.000Z",
            "content_html": "<h1 id=\"动画原理\"><a class=\"anchor\" href=\"#动画原理\">#</a> 动画原理</h1>\n<p>动画的本质是，动画对象随着时间，从初始值到最终值的连续变化。所以，定义一个动画有三个要素，动画时间即 duration，动画初始和最终值。最基础原始的关系是动画时间和动画值成正比例（线性插值）。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mfrac><mi>t</mi><mrow><mi>d</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>A</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow><mrow><mi>e</mi><mi>n</mi><mi>d</mi><mo>−</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>r</mi><mi>t</mi></mrow></mfrac></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\frac{t}{duration} = \\frac{AnimateValue}{end - start} \\tag{1}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.9780799999999998em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.29208em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.14077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:2.14077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">1</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p><img data-src=\"https://pic.imgdb.cn/item/64a830a11ddac507cc4fff21.jpg\" alt=\"\" /></p>\n<h1 id=\"keyframe扩展\"><a class=\"anchor\" href=\"#keyframe扩展\">#</a> KeyFrame 扩展</h1>\n<p>在 Android 内部实现上，会将初始值到最终值切分成诸多在动画时间轴均匀分布的关键帧 KeyFrame，这个类有两个重要成员变量：</p>\n<ol>\n<li>mFraction：当前关键帧对应动画时间与 duration 的比值。</li>\n<li>mValue：在当前动画时间比时，动画对象的状态值。</li>\n</ol>\n<p>抽象来看，公式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 中，start &amp; end 对应起始关键帧：KF (0, start) 和结束关键帧: KF (1, end)。但如果只有这两个关键帧，物体就只能介于这两个关键帧的动画值之间线性变化，为了支持动画值可以挣脱这个局限，动画框架提供了关键帧的 API，指定某关键帧（mFraction, mValue），其中 mValue 可以在 [start, end] 之外。也可以提供关键帧计算函数，实现曲线运动轨迹而非线段。为此动画时间轴上 t 时，对应的动画值 V 计算方法扩展为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mfrac><mrow><mfrac><mi>t</mi><mrow><mi>d</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></mfrac><mo>−</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>m</mi><mi>F</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>m</mi><mi>F</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>−</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>v</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>m</mi><mi>F</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>A</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>−</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>v</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow></mfrac></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\frac{\\frac{t}{duration} - preKF.mFraction}{nextKF.mFraction - prevKF.mFraction} = \\frac{AnimateValue}{nextKF.value - prevKF.value} \\tag{2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4399960000000003em;vertical-align:-0.8804400000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5595560000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7350000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824556em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804400000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25188em;vertical-align:-0.8804400000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804400000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:2.4399960000000003em;vertical-align:-0.8804400000000001em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">2</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p>它根据<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>t</mi><mrow><mi>d</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{t}{duration}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.169556em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824556em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> 和 KeyFrame.mFraction 相比较大小，计算位于哪两个 KeyFrame 区间，应用公式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。随着动画时间流逝，就可以在所有的 KeyFrame 应用公式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 了。</p>\n<table>\n<thead>\n<tr>\n<th>KeyFrame.mFraction &amp; mValue 均匀线性分布</th>\n<th>KeyFrame.mFraction 线性，mValue 曲线分布</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img data-src=\"https://pic.imgdb.cn/item/64a830de1ddac507cc50c9b3.jpg\" style=\"zoom:50%;\" /></td>\n<td><img data-src=\"https://pic.imgdb.cn/item/64a831441ddac507cc51f687.jpg\" style=\"zoom:50%;\" /></td>\n</tr>\n</tbody>\n</table>\n<p>注：右侧第四个红点挪到 end 右侧，动画轨迹就可以越出 end 的范围了。</p>\n<h1 id=\"变速扩展\"><a class=\"anchor\" href=\"#变速扩展\">#</a> 变速扩展</h1>\n<p>为支持非匀速动画，使用 Interpolator 将 t 篡改， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>p</mi><mi>o</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>o</mi><mi>r</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>d</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{Interpolator(t)}{duration}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>，转换成别的比例。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mfrac><mrow><mfrac><mrow><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>p</mi><mi>o</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>o</mi><mi>r</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>d</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></mfrac><mo>−</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>m</mi><mi>F</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>m</mi><mi>F</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>−</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>v</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>m</mi><mi>F</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>A</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow><mrow><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>−</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>v</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow></mfrac></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\frac{\\frac{Interpolator(t)}{duration} - preKF.mFraction}{nextKF.mFraction - prevKF.mFraction} = \\frac{AnimateValue}{nextKF.value - prevKF.value} \\tag{3}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.62544em;vertical-align:-0.8804400000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.745em;\"><span style=\"top:-2.324em;\"><span class=\"pstrut\" style=\"height:3.01em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.2399999999999998em;\"><span class=\"pstrut\" style=\"height:3.01em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.745em;\"><span class=\"pstrut\" style=\"height:3.01em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">n</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804400000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25188em;vertical-align:-0.8804400000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.37144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804400000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:2.62544em;vertical-align:-0.8804400000000001em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">3</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>p</mi><mi>o</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>o</mi><mi>r</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mtext> where </mtext><mi>t</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">Interpolator(t)\\text{ where } t\\in[0, 1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord\"> where </span></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> 其实就是一个函数，输入原始时间 t，输出篡改后的时间，约束是 Interpolator (0) = 0 &amp;&amp; Interpolator (1) = 1。由于 AnimateValue 是 t 的函数，变速动画成为可能，且容易实现。比如未引入 Interpolator 概念的公式，AnimateValue 和 t 是等比关系，只能是匀速动画，是 Interpolator (t) = t 这一特例，但它可以做的更多，比如匀加速，匀减速…… 具体是怎么变速，AnimateValue 对 t 一阶求导可以得到速度，二阶求导可以得到加速度，这样描述应该可以更容易理解。</p>\n<table>\n<thead>\n<tr>\n<th>匀速运动 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>p</mi><mi>o</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>o</mi><mi>r</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Interpolator(t) = t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span></th>\n<th>匀加速<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>p</mi><mi>o</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>o</mi><mi>r</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>t</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">Interpolator(t) = t^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></th>\n<th>匀减速<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>p</mi><mi>o</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>o</mi><mi>r</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">Interpolator(t) = 1 - ( t - 1 ) ^ 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img data-src=\"https://pic.imgdb.cn/item/64a8316b1ddac507cc524d64.jpg\" style=\"zoom:50%;\" /></td>\n<td><img data-src=\"https://pic.imgdb.cn/item/64a831821ddac507cc527ec7.jpg\" style=\"zoom:50%;\" /></td>\n<td><img data-src=\"https://pic.imgdb.cn/item/64a831971ddac507cc52a9c4.jpg\" style=\"zoom:50%;\" /></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"向量扩展\"><a class=\"anchor\" href=\"#向量扩展\">#</a> 向量扩展</h1>\n<p>对于有些动画值，并非标量，不能简单的如：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mi>f</mi><mn>2.</mn><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>−</mo><mi>k</mi><mi>f</mi><mn>1.</mn><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">kf2.value - kf1.value</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">2</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span></span></span></span> 直接相减，因此引入 Evaluator，从其方法签名 <code>evaluate(float fraction, Object startValue, Object endValue)</code> ，fraction 参数值为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span> 的左值，可以看出其职责为，计算出 startValue 和 endValue 之间，fraction 所对应的动画值。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mi>A</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>=</mo><mi>e</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo separator=\"true\">,</mo><mtext> </mtext><mi>p</mi><mi>r</mi><mi>e</mi><mi>v</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo separator=\"true\">,</mo><mtext> </mtext><mi>n</mi><mi>e</mi><mi>x</mi><mi>t</mi><mi>K</mi><mi>F</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo stretchy=\"false\">)</mo></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">AnimateValue = evaluate(fraction, \\ prevKF.value, \\ nextKF.value) \\tag{4}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span><span class=\"mpunct\">,</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">e</span><span class=\"mclose\">)</span></span><span class=\"tag\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">4</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p>以颜色值为例</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> fraction<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> startValue<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> endValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> startInt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">)</span> startValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> startA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>startInt <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> startR <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>startInt <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> startG <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>startInt <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> startB <span class=\"token operator\">=</span> startInt <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> endInt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">)</span> endValue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> endA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>endInt <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">int</span> endR <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>endInt <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">int</span> endG <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>endInt <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">int</span> endB <span class=\"token operator\">=</span> endInt <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>startA <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>fraction <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>endA <span class=\"token operator\">-</span> startA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>startR <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>fraction <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>endR <span class=\"token operator\">-</span> startR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>startG <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>fraction <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>endG <span class=\"token operator\">-</span> startG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>startB <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>fraction <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>endB <span class=\"token operator\">-</span> startB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"多属性动画\"><a class=\"anchor\" href=\"#多属性动画\">#</a> 多属性动画</h1>\n<p>诸多关键帧只能描述单一对象的动画轨迹，将属性和其对应的关键帧封装为 PropertyValuesHolder，使得能够支持多个动画对象的多个属性同时动画。</p>\n<h1 id=\"动画引擎\"><a class=\"anchor\" href=\"#动画引擎\">#</a> 动画引擎</h1>\n<p>动画的内部实现使用 Choreographer 提供定时引擎，周期性回调执行上述动画值的计算，实现动画对象从上一个关键帧到下一个关键帧的动画渐变效果。</p>\n",
            "tags": [
                "Android",
                "Android, Animation, Animator"
            ]
        }
    ]
}